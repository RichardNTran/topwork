{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-3!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/selections/selection-step.tsx","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/selections/selection-step.tsx","mtime":1582103313096},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/react-hot-loader/webpack.js","mtime":1569983885062},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport i18next from 'app/shared/locales';\nimport { getTaskSelectionSteps } from 'app/redux/actions';\nimport { SelectField } from 'app/shared/component';\nimport { handleMappingAvailableOptions } from 'app/shared/utils';\nclass SelectionStep extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChangeSelect = selectedOption => {\n            const { onChangeSelection } = this.props;\n            this.setState({\n                selectedOption\n            });\n            onChangeSelection && onChangeSelection(selectedOption);\n        };\n        if (props.selectionStepId) {\n            this.state = {\n                selectedOption: _.findLast(props.options, { value: props.selectionStepId })\n            };\n        }\n        else {\n            this.state = { selectedOption: props.selectedOption };\n        }\n    }\n    componentDidMount() {\n        const { options, getOptionsAction } = this.props;\n        !options && getOptionsAction();\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            selectedOption: _.findLast(nextProps.options, { value: nextProps.selectionStepId })\n        });\n    }\n    render() {\n        const { selectedOption } = this.state;\n        const { name, options, editMode, classNameStyle, availableOptions, menuPlacement, noOptionsMessage } = this.props;\n        if (!editMode) {\n            return (React.createElement(\"p\", { className: `step-value mg-b-0 pd-t-5 ${selectedOption ? '' : ' tx-color-04'}` }, selectedOption ? selectedOption.label : i18next.t('taskInbox.fields.selection_step.placeholder')));\n        }\n        if (!options)\n            return null;\n        return (React.createElement(\"div\", { className: \"selection-step-content\" },\n            React.createElement(SelectField, { name: name, value: selectedOption, options: availableOptions ? handleMappingAvailableOptions(availableOptions, options) : options, onChange: this.handleChangeSelect, placeholder: i18next.t('taskInbox.fields.selection_step.placeholder'), className: classNameStyle, menuPlacement: menuPlacement, noOptionsMessage: noOptionsMessage ? noOptionsMessage : () => i18next.t('component.selectionField.noOptionsMessage') })));\n    }\n}\nconst mapStateToProps = state => {\n    const { appDataReducer } = state;\n    const { taskSelectionSteps } = appDataReducer;\n    return {\n        options: taskSelectionSteps\n    };\n};\nconst mapDispatchToProps = dispatch => ({\n    getOptionsAction: () => dispatch(getTaskSelectionSteps())\n});\nconst selectionStep = connect(mapStateToProps, mapDispatchToProps)(SelectionStep);\nexport { selectionStep as SelectionStep };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/selections/selection-step.tsx","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/selections/selection-step.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,OAAO,EAAE,qBAAqB,EAAE,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,6BAA6B,EAAE,MAAM,kBAAkB,CAAC;AAoBjE,MAAM,aAAc,SAAQ,SAA2C;IACrE,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAqBf,uBAAkB,GAAG,cAAc,CAAC,EAAE;YACpC,MAAM,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc;aACf,CAAC,CAAC;YACH,iBAAiB,IAAI,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACzD,CAAC,CAAC;QA1BA,IAAI,KAAK,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,eAAe,EAAE,CAAgB;aAC3F,CAAC;SACH;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,CAAC,cAAc,EAAE,CAAC;SACvD;IACH,CAAC;IAED,iBAAiB;QACf,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjD,CAAC,OAAO,IAAI,gBAAgB,EAAE,CAAC;IACjC,CAAC;IAED,yBAAyB,CAAC,SAAS;QACjC,IAAI,CAAC,QAAQ,CAAC;YACZ,cAAc,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,SAAS,CAAC,eAAe,EAAE,CAAgB;SACnG,CAAC,CAAC;IACL,CAAC;IAUD,MAAM;QACJ,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAClH,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,CACL,2BAAG,SAAS,EAAE,4BAA4B,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE,IAC7E,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,6CAA6C,CAAC,CAC/F,CACL,CAAC;SACH;QACD,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC;QAC1B,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;YACrC,oBAAC,WAAW,IACV,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,cAAc,EACrB,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAC,6BAA6B,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAC9F,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EACjC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,6CAA6C,CAAC,EACrE,SAAS,EAAE,cAAc,EACzB,aAAa,EAAE,aAAa,EAC5B,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,2CAA2C,CAAC,GACpH,CACE,CACP,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,KAAK,CAAC,EAAE;IAC9B,MAAM,EAAE,cAAc,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,EAAE,kBAAkB,EAAE,GAAG,cAAc,CAAC;IAC9C,OAAO;QACL,OAAO,EAAE,kBAAkB;KAC5B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtC,gBAAgB,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;CAC1D,CAAC,CAAC;AAKH,MAAM,aAAa,GAAG,OAAO,CAC3B,eAAe,EACf,kBAAkB,CACnB,CAAC,aAAa,CAAC,CAAC;AACjB,OAAO,EAAE,aAAa,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport i18next from 'app/shared/locales';\nimport { getTaskSelectionSteps } from 'app/redux/actions';\nimport { SelectField } from 'app/shared/component';\nimport { handleMappingAvailableOptions } from 'app/shared/utils';\n\nimport { ISelectItem } from 'app/shared/model/layout';\n\ninterface ISelectionState {\n  selectedOption?: ISelectItem;\n}\n\ninterface ISelectionProps extends StateProps, DispatchProps {\n  name?: string;\n  availableOptions?: string[];\n  selectedOption?: ISelectItem;\n  selectionStepId?: string;\n  getOptionsAction: () => void;\n  onChangeSelection?: (value) => void;\n  editMode?: boolean;\n  classNameStyle?: string;\n  menuPlacement?: string;\n  noOptionsMessage?: () => string;\n}\nclass SelectionStep extends Component<ISelectionProps, ISelectionState> {\n  constructor(props) {\n    super(props);\n    if (props.selectionStepId) {\n      this.state = {\n        selectedOption: _.findLast(props.options, { value: props.selectionStepId }) as ISelectItem\n      };\n    } else {\n      this.state = { selectedOption: props.selectedOption };\n    }\n  }\n\n  componentDidMount() {\n    const { options, getOptionsAction } = this.props;\n    !options && getOptionsAction();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedOption: _.findLast(nextProps.options, { value: nextProps.selectionStepId }) as ISelectItem\n    });\n  }\n\n  handleChangeSelect = selectedOption => {\n    const { onChangeSelection } = this.props;\n    this.setState({\n      selectedOption\n    });\n    onChangeSelection && onChangeSelection(selectedOption);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const { name, options, editMode, classNameStyle, availableOptions, menuPlacement, noOptionsMessage } = this.props;\n    if (!editMode) {\n      return (\n        <p className={`step-value mg-b-0 pd-t-5 ${selectedOption ? '' : ' tx-color-04'}`}>\n          {selectedOption ? selectedOption.label : i18next.t('taskInbox.fields.selection_step.placeholder')}\n        </p>\n      );\n    }\n    if (!options) return null;\n    return (\n      <div className=\"selection-step-content\">\n        <SelectField\n          name={name}\n          value={selectedOption}\n          options={availableOptions ? handleMappingAvailableOptions(availableOptions, options) : options}\n          onChange={this.handleChangeSelect}\n          placeholder={i18next.t('taskInbox.fields.selection_step.placeholder')}\n          className={classNameStyle}\n          menuPlacement={menuPlacement}\n          noOptionsMessage={noOptionsMessage ? noOptionsMessage : () => i18next.t('component.selectionField.noOptionsMessage')}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { appDataReducer } = state;\n  const { taskSelectionSteps } = appDataReducer;\n  return {\n    options: taskSelectionSteps\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getOptionsAction: () => dispatch(getTaskSelectionSteps())\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nconst selectionStep = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectionStep);\nexport { selectionStep as SelectionStep };\n"]}]}