{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/service/rest-client.ts","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/service/rest-client.ts","mtime":1582103313024},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import { __awaiter } from \"tslib\";\nimport axios from 'axios';\nimport { isEmpty, get } from 'lodash';\nimport { notification } from 'antd';\nimport qs from 'qs';\nimport history from 'app/config/history';\nimport i18next from 'app/shared/locales';\nimport { CookieKey, agentPlatformRoute } from 'app/shared/constant';\nimport { CookiesStorage } from 'app/shared/utils';\nimport { API_AGENT_URL } from 'app/config/constants';\nconst DEFAULT_APP_URL = {\n    baseURL: API_AGENT_URL,\n    headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: CookiesStorage.getAccessToken()\n    }\n};\nexport const statusCode = {\n    OK: 200,\n    NOT_MODIFIED: 304,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    METHOD_NOTALLOWED: 405,\n    UNPROCESSABLE_ENTITY: 422,\n    LOCKED: 423,\n    BAD_GATEWAY: 502,\n    GATEWAY_TIMEOUT: 504,\n    INTERNAL_SERVER_ERROR: 500\n};\nexport default class RestClient {\n    constructor(config = {}) {\n        this.config = Object.assign(Object.assign({}, DEFAULT_APP_URL), config);\n    }\n    setBasicAuthAccessToken(accessToken) {\n        this.config = Object.assign(Object.assign({}, this.config), { headers: Object.assign(Object.assign({}, this.config.headers), { Authorization: accessToken }) });\n    }\n    setBasicAuth(username, password) {\n        this.config = Object.assign(Object.assign({}, this.config), { auth: { username, password } });\n    }\n    setBaseURL(baseURL) {\n        this.config = Object.assign(Object.assign({}, this.config), { baseURL });\n    }\n    get(url, params = {}, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({}, config), { params }));\n    }\n    geturlendCode(url, params = {}, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({}, config), { params }));\n    }\n    postUrlEndCode(url, data, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'post' }, config), { data }));\n    }\n    post(url, data, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'post' }, config), { data: qs.stringify(data) }));\n    }\n    put(url, data, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'put' }, config), { data: qs.stringify(data) }));\n    }\n    delete(url, data = {}, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'delete' }, config), { data: qs.stringify(data) }));\n    }\n    patch(url, data = {}, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'patch' }, config), { data: qs.stringify(data) }));\n    }\n    patchUrlEndcode(url, data = {}, config = {}) {\n        return this.executeRequest(url, Object.assign(Object.assign({ method: 'patch' }, config), { data }));\n    }\n    executeRequest(url, config) {\n        const finalHeaderConfig = Object.assign(Object.assign({}, this.config.headers), config.headers);\n        const finalConfig = Object.assign(Object.assign(Object.assign(Object.assign({}, this.config), { url }), config), { headers: Object.assign({}, finalHeaderConfig), paramsSerializer: (params) => qs.stringify(params, { arrayFormat: 'comma', encode: false, skipNulls: true }) });\n        return axios\n            .request(finalConfig)\n            .then(response => Promise.resolve(response.data))\n            .catch(errorResponse => {\n            const status = get(errorResponse, 'response.status', '');\n            const errorRes = get(errorResponse, 'response.data', { code: 1, data: null, message: ['Network error!'] });\n            return handleHttpError(status, errorRes.errors);\n        });\n    }\n}\nfunction handleCookie() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield CookiesStorage.setCookieData(CookieKey.pastUrl, window.location.href.toString());\n        yield CookiesStorage.clearData();\n    });\n}\nfunction handleHttpError(status, errors) {\n    const newError = Object.assign({ status }, errors);\n    switch (status) {\n        case statusCode.NOT_MODIFIED:\n            return Promise.resolve();\n        case statusCode.UNAUTHORIZED:\n            const promiseCookie = new Promise((resolve, reject) => {\n                handleCookie();\n                const currentPath = window.location.pathname;\n                if (currentPath !== agentPlatformRoute.Login) {\n                    history.push(agentPlatformRoute.Login);\n                    return Promise.reject(newError);\n                }\n                resolve();\n            });\n            promiseCookie.then(() => Promise.reject(newError));\n            break;\n        case statusCode.BAD_REQUEST:\n        case statusCode.FORBIDDEN:\n        case statusCode.NOT_FOUND:\n        case statusCode.METHOD_NOTALLOWED:\n        case statusCode.UNPROCESSABLE_ENTITY:\n        case statusCode.LOCKED:\n        case statusCode.GATEWAY_TIMEOUT:\n        case statusCode.INTERNAL_SERVER_ERROR:\n        case statusCode.BAD_GATEWAY: {\n            const { code, detail } = errors[0];\n            notification.error({ key: 'updatable', message: !isEmpty(code) ? i18next.t(`errorMessage.${code}`) : detail });\n            return Promise.reject(newError);\n        }\n        default:\n            if (status === '') {\n                notification.error({ key: 'updatable', message: i18next.t(`errorMessage.networkError`) });\n            }\n            else {\n                notification.error({ key: 'updatable', message: JSON.stringify(errors) });\n            }\n            return Promise.reject(newError);\n    }\n}\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/service/rest-client.ts","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/service/rest-client.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { isEmpty, get } from 'lodash';\nimport { notification } from 'antd';\nimport qs from 'qs';\n\nimport history from 'app/config/history';\nimport i18next from 'app/shared/locales';\nimport { CookieKey, agentPlatformRoute } from 'app/shared/constant';\nimport { CookiesStorage } from 'app/shared/utils';\n\nimport { API_AGENT_URL } from 'app/config/constants';\nconst DEFAULT_APP_URL = {\n  baseURL: API_AGENT_URL,\n  headers: {\n    Accept: 'application/json, text/plain, */*',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    Authorization: CookiesStorage.getAccessToken()\n  }\n};\n\nexport const statusCode = {\n  OK: 200,\n  NOT_MODIFIED: 304,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOTALLOWED: 405,\n  UNPROCESSABLE_ENTITY: 422,\n  LOCKED: 423,\n  BAD_GATEWAY: 502,\n  GATEWAY_TIMEOUT: 504,\n  INTERNAL_SERVER_ERROR: 500\n};\n\nexport default class RestClient {\n  config: any;\n  constructor(config = {}) {\n    this.config = { ...DEFAULT_APP_URL, ...config };\n  }\n\n  setBasicAuthAccessToken(accessToken) {\n    this.config = { ...this.config, headers: { ...this.config.headers, Authorization: accessToken } };\n  }\n\n  setBasicAuth(username, password) {\n    this.config = { ...this.config, auth: { username, password } };\n  }\n\n  setBaseURL(baseURL) {\n    this.config = { ...this.config, baseURL };\n  }\n\n  get(url, params = {}, config = {}) {\n    return this.executeRequest(url, {\n      ...config,\n      params\n    });\n  }\n\n  geturlendCode(url, params = {}, config = {}) {\n    return this.executeRequest(url, { ...config, params });\n  }\n\n  postUrlEndCode(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'post', ...config, data });\n  }\n\n  post(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'post', ...config, data: qs.stringify(data) });\n  }\n\n  put(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'put', ...config, data: qs.stringify(data) });\n  }\n\n  delete(url, data = {}, config = {}) {\n    return this.executeRequest(url, { method: 'delete', ...config, data: qs.stringify(data) });\n  }\n\n  patch(url, data = {}, config = {}) {\n    return this.executeRequest(url, { method: 'patch', ...config, data: qs.stringify(data) });\n  }\n\n  patchUrlEndcode(url, data = {}, config = {}) {\n    return this.executeRequest(url, { method: 'patch', ...config, data });\n  }\n\n  executeRequest(url, config) {\n    const finalHeaderConfig = { ...this.config.headers, ...config.headers };\n    const finalConfig = {\n      ...this.config,\n      url,\n      ...config,\n      headers: { ...finalHeaderConfig },\n      paramsSerializer: (params: any) => qs.stringify(params, { arrayFormat: 'comma', encode: false, skipNulls: true })\n    };\n    return axios\n      .request(finalConfig)\n      .then(response => Promise.resolve(response.data))\n      .catch(errorResponse => {\n        const status = get(errorResponse, 'response.status', '');\n        const errorRes = get(errorResponse, 'response.data', { code: 1, data: null, message: ['Network error!'] });\n        return handleHttpError(status, errorRes.errors);\n      });\n  }\n}\n\nasync function handleCookie() {\n  await CookiesStorage.setCookieData(CookieKey.pastUrl, window.location.href.toString());\n  await CookiesStorage.clearData();\n}\n\nfunction handleHttpError(status, errors) {\n  const newError = {\n    status,\n    ...errors\n  };\n  switch (status) {\n    case statusCode.NOT_MODIFIED:\n      return Promise.resolve();\n    case statusCode.UNAUTHORIZED:\n      const promiseCookie = new Promise((resolve, reject) => {\n        handleCookie();\n        const currentPath = window.location.pathname;\n        if (currentPath !== agentPlatformRoute.Login) {\n          history.push(agentPlatformRoute.Login);\n          return Promise.reject(newError);\n        }\n        resolve();\n      });\n      promiseCookie.then(() => Promise.reject(newError));\n      break;\n    case statusCode.BAD_REQUEST:\n    case statusCode.FORBIDDEN:\n    case statusCode.NOT_FOUND:\n    case statusCode.METHOD_NOTALLOWED:\n    case statusCode.UNPROCESSABLE_ENTITY:\n    case statusCode.LOCKED:\n    case statusCode.GATEWAY_TIMEOUT:\n    case statusCode.INTERNAL_SERVER_ERROR:\n    case statusCode.BAD_GATEWAY: {\n      const { code, detail } = errors[0];\n      notification.error({ key: 'updatable', message: !isEmpty(code) ? i18next.t(`errorMessage.${code}`) : detail });\n      return Promise.reject(newError);\n    }\n    default:\n      if (status === '') {\n        notification.error({ key: 'updatable', message: i18next.t(`errorMessage.networkError`) });\n      } else {\n        notification.error({ key: 'updatable', message: JSON.stringify(errors) });\n      }\n\n      return Promise.reject(newError);\n  }\n}\n"]}]}