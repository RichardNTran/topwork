{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/resume.mapping.ts","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/resume.mapping.ts","mtime":1582103313178},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import _ from 'lodash';\nimport i18next from 'app/shared/locales';\nimport { handleBreakAndGroupData, convertDateTimeFullCrawler, convertYearMonthJapan, convertPeriodDataFull } from 'app/shared/utils';\nfunction mappingProfileToProfileView(profile) {\n    const profileView = {\n        resumeId: profile.resumeId,\n        fullName: {\n            type: profile.firstName.type,\n            position: profile.firstName.position,\n            data: `${profile.firstName.data} ${profile.lastName.data ? `(${profile.lastName.data})` : ''}`\n        },\n        phone: profile.phone,\n        email: profile.email,\n        isMarried: profile.isMarried,\n        children: profile.children,\n        birthday: Object.assign(Object.assign({}, profile.birthdayDate), { data: convertDateTimeFullCrawler(profile.birthdayDate.data) }),\n        birthdayYearOld: {\n            type: profile.birthdayYearOld.type,\n            position: profile.birthdayYearOld.position,\n            data: _.isEmpty(profile.birthdayYearOld.data) ? '' : `${profile.birthdayYearOld.data} ${i18next.t('candidateContainer.resume.age')}`\n        },\n        sex: profile.sex,\n        residence: profile.residence,\n        memo: profile.memo\n    };\n    return profileView;\n}\nfunction mappingProjectToView(project) {\n    const projectView = {\n        projectName: project.projectName,\n        projectPeriod: Object.assign(Object.assign({}, project.projectPeriod), { data: convertPeriodDataFull(project.projectPeriod.data) }),\n        projectDetail: project.projectDetail\n    };\n    return projectView;\n}\nfunction mappingLaborityToView(labority) {\n    const laborityView = {\n        laboratoryName: labority.laboratoryName,\n        period: Object.assign(Object.assign({}, labority.period), { data: convertPeriodDataFull(labority.period.data) }),\n        details: labority.details\n    };\n    return laborityView;\n}\nfunction mappingActivityToView(activity) {\n    const activityView = {\n        activityName: activity.activityName,\n        period: activity.period,\n        details: activity.details\n    };\n    return activityView;\n}\nfunction mappingResumeInformationToView(resumeInformation) {\n    const resumeInformationView = {\n        activities: resumeInformation.activities,\n        awardHistories: resumeInformation.awardHistories,\n        basicInformation: {\n            introduction: resumeInformation.basicInformation.introduction,\n            todo: resumeInformation.basicInformation.todo,\n            language: resumeInformation.basicInformation.language,\n            toeicScore: resumeInformation.basicInformation.toeicScore,\n            toeflScore: resumeInformation.basicInformation.toeflScore,\n            experienceStudyingAbroad: resumeInformation.basicInformation.experienceStudyingAbroad,\n            experienceOverseasWork: resumeInformation.basicInformation.experienceOverseasWork,\n            qualification: {\n                type: resumeInformation.basicInformation.qualification.type,\n                position: resumeInformation.basicInformation.qualification.position,\n                data: handleBreakAndGroupData(resumeInformation.basicInformation.qualification.data)\n            },\n            numberOfManagement: resumeInformation.basicInformation.numberOfManagement,\n            currentAnnualIncome: resumeInformation.basicInformation.currentAnnualIncome,\n            privateComment: resumeInformation.basicInformation.privateComment,\n            lastLoginDate: Object.assign(Object.assign({}, resumeInformation.basicInformation.lastLoginDate), { data: convertDateTimeFullCrawler(resumeInformation.basicInformation.lastLoginDate.data) }),\n            lastUpdateDate: Object.assign(Object.assign({}, resumeInformation.basicInformation.lastUpdateDate), { data: convertDateTimeFullCrawler(resumeInformation.basicInformation.lastUpdateDate.data) }),\n            registrationDate: Object.assign(Object.assign({}, resumeInformation.basicInformation.registrationDate), { data: convertDateTimeFullCrawler(resumeInformation.basicInformation.registrationDate.data) })\n        },\n        desiredCondition: resumeInformation.desiredCondition,\n        educations: resumeInformation.educations,\n        header: resumeInformation.header,\n        laboratories: resumeInformation.laboratories,\n        other: resumeInformation.other,\n        portfolios: resumeInformation.portfolios,\n        profile: mappingProfileToProfileView(resumeInformation.profile),\n        projects: resumeInformation.projects,\n        skills: resumeInformation.skills,\n        writingHistories: resumeInformation.writingHistories,\n        workHistoryExtended: resumeInformation.workHistoryExtended,\n        companyHistories: resumeInformation.companyHistories,\n        educationExtended: resumeInformation.educationExtended\n    };\n    return resumeInformationView;\n}\nfunction mappingEducationToView(education) {\n    const newEducation = {\n        schoolName: education.schoolName,\n        undergraduateDepartmentMajor: education.undergraduateDepartmentMajor,\n        graduationDate: Object.assign(Object.assign({}, education.graduationDate), { data: convertYearMonthJapan(education.graduationDate.data) }),\n        lessonActivity: education.lessonActivity\n    };\n    return newEducation;\n}\nfunction mappingResumeToView(resume) {\n    const resumeModelView = {\n        id: resume.id,\n        companyId: resume.companyId,\n        jobSiteId: resume.jobSiteId,\n        candidateId: resume.candidateId,\n        information: !_.isEmpty(resume.information) ? mappingResumeInformationToView(resume.information) : null,\n        attachments: resume.attachments\n    };\n    return resumeModelView;\n}\nfunction mappingDesiredConditionToView(desiredCondition) {\n    const desiredConditionView = {\n        desiredWorkRegion: desiredCondition.desiredWorkRegion,\n        overseasPreferredLocation: desiredCondition.overseasPreferredLocation,\n        overseasPossibleRecruitment: desiredCondition.overseasPossibleRecruitment,\n        desiredSalary: desiredCondition.desiredSalary,\n        desiredIndustry: desiredCondition.desiredIndustry,\n        desiredOccupation: desiredCondition.desiredOccupation,\n        workingStyleInterested: desiredCondition.workingStyleInterested,\n        conditionsSpecial: desiredCondition.conditionsSpecial,\n        conditionsOther: desiredCondition.conditionsOther\n    };\n    return desiredConditionView;\n}\nfunction mappingAwardHistoryToView(awardHistory) {\n    const awardHistoryView = {\n        title: awardHistory.title,\n        awardYear: Object.assign(Object.assign({}, awardHistory.awardYear), { data: convertDateTimeFullCrawler(awardHistory.awardYear.data) })\n    };\n    return awardHistoryView;\n}\nexport { mappingProfileToProfileView, mappingResumeToView, mappingEducationToView, mappingDesiredConditionToView, mappingProjectToView, mappingLaborityToView, mappingActivityToView, mappingAwardHistoryToView };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/resume.mapping.ts","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/resume.mapping.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nimport {\n  IProfile,\n  IProfileView,\n  IResumeModel,\n  IResumeModeView,\n  IResumeInformation,\n  IResumeInformationView,\n  IEducations,\n  IDesiredCondition,\n  IProject,\n  ILabority,\n  IActivity,\n  IAwardHistory\n} from '../business';\nimport i18next from 'app/shared/locales';\nimport { handleBreakAndGroupData, convertDateTimeFullCrawler, convertYearMonthJapan, convertPeriodDataFull } from 'app/shared/utils';\n\nfunction mappingProfileToProfileView(profile: IProfile) {\n  const profileView: IProfileView = {\n    resumeId: profile.resumeId,\n    fullName: {\n      type: profile.firstName.type,\n      position: profile.firstName.position,\n      data: `${profile.firstName.data} ${profile.lastName.data ? `(${profile.lastName.data})` : ''}`\n    },\n    phone: profile.phone,\n    email: profile.email,\n    isMarried: profile.isMarried,\n    children: profile.children,\n    birthday: {\n      ...profile.birthdayDate,\n      data: convertDateTimeFullCrawler(profile.birthdayDate.data)\n    },\n    birthdayYearOld: {\n      type: profile.birthdayYearOld.type,\n      position: profile.birthdayYearOld.position,\n      data: _.isEmpty(profile.birthdayYearOld.data) ? '' : `${profile.birthdayYearOld.data} ${i18next.t('candidateContainer.resume.age')}`\n    },\n    sex: profile.sex,\n    residence: profile.residence,\n    memo: profile.memo\n  };\n  return profileView;\n}\n\nfunction mappingProjectToView(project: IProject) {\n  const projectView = {\n    projectName: project.projectName,\n    projectPeriod: {\n      ...project.projectPeriod,\n      data: convertPeriodDataFull(project.projectPeriod.data)\n    },\n    projectDetail: project.projectDetail\n  };\n  return projectView;\n}\n\nfunction mappingLaborityToView(labority: ILabority) {\n  const laborityView = {\n    laboratoryName: labority.laboratoryName,\n    period: {\n      ...labority.period,\n      data: convertPeriodDataFull(labority.period.data)\n    },\n    details: labority.details\n  };\n  return laborityView;\n}\n\nfunction mappingActivityToView(activity: IActivity) {\n  const activityView: IActivity = {\n    activityName: activity.activityName,\n    period: activity.period,\n    details: activity.details\n  };\n  return activityView;\n}\n\nfunction mappingResumeInformationToView(resumeInformation: IResumeInformation) {\n  const resumeInformationView: IResumeInformationView = {\n    activities: resumeInformation.activities,\n    awardHistories: resumeInformation.awardHistories,\n    basicInformation: {\n      introduction: resumeInformation.basicInformation.introduction,\n      todo: resumeInformation.basicInformation.todo,\n      language: resumeInformation.basicInformation.language,\n      toeicScore: resumeInformation.basicInformation.toeicScore,\n      toeflScore: resumeInformation.basicInformation.toeflScore,\n      experienceStudyingAbroad: resumeInformation.basicInformation.experienceStudyingAbroad,\n      experienceOverseasWork: resumeInformation.basicInformation.experienceOverseasWork,\n      qualification: {\n        type: resumeInformation.basicInformation.qualification.type,\n        position: resumeInformation.basicInformation.qualification.position,\n        data: handleBreakAndGroupData(resumeInformation.basicInformation.qualification.data)\n      },\n      numberOfManagement: resumeInformation.basicInformation.numberOfManagement,\n      currentAnnualIncome: resumeInformation.basicInformation.currentAnnualIncome,\n      privateComment: resumeInformation.basicInformation.privateComment,\n      lastLoginDate: {\n        ...resumeInformation.basicInformation.lastLoginDate,\n        data: convertDateTimeFullCrawler(resumeInformation.basicInformation.lastLoginDate.data)\n      },\n      lastUpdateDate: {\n        ...resumeInformation.basicInformation.lastUpdateDate,\n        data: convertDateTimeFullCrawler(resumeInformation.basicInformation.lastUpdateDate.data)\n      },\n      registrationDate: {\n        ...resumeInformation.basicInformation.registrationDate,\n        data: convertDateTimeFullCrawler(resumeInformation.basicInformation.registrationDate.data)\n      }\n    },\n    desiredCondition: resumeInformation.desiredCondition,\n    educations: resumeInformation.educations,\n    header: resumeInformation.header,\n    laboratories: resumeInformation.laboratories,\n    other: resumeInformation.other,\n    portfolios: resumeInformation.portfolios,\n    profile: mappingProfileToProfileView(resumeInformation.profile),\n    projects: resumeInformation.projects,\n    skills: resumeInformation.skills,\n    writingHistories: resumeInformation.writingHistories,\n    workHistoryExtended: resumeInformation.workHistoryExtended,\n    companyHistories: resumeInformation.companyHistories,\n    educationExtended: resumeInformation.educationExtended\n  };\n  return resumeInformationView;\n}\n\nfunction mappingEducationToView(education: IEducations) {\n  const newEducation = {\n    schoolName: education.schoolName,\n    undergraduateDepartmentMajor: education.undergraduateDepartmentMajor,\n    graduationDate: {\n      ...education.graduationDate,\n      data: convertYearMonthJapan(education.graduationDate.data)\n    },\n    lessonActivity: education.lessonActivity\n  };\n  return newEducation as IEducations;\n}\n\nfunction mappingResumeToView(resume: IResumeModel) {\n  const resumeModelView: IResumeModeView = {\n    id: resume.id,\n    companyId: resume.companyId,\n    jobSiteId: resume.jobSiteId,\n    candidateId: resume.candidateId,\n    information: !_.isEmpty(resume.information) ? mappingResumeInformationToView(resume.information) : null,\n    attachments: resume.attachments\n  };\n  return resumeModelView;\n}\n\nfunction mappingDesiredConditionToView(desiredCondition: IDesiredCondition) {\n  const desiredConditionView = {\n    desiredWorkRegion: desiredCondition.desiredWorkRegion,\n    overseasPreferredLocation: desiredCondition.overseasPreferredLocation,\n    overseasPossibleRecruitment: desiredCondition.overseasPossibleRecruitment,\n    desiredSalary: desiredCondition.desiredSalary,\n    desiredIndustry: desiredCondition.desiredIndustry,\n    desiredOccupation: desiredCondition.desiredOccupation,\n    workingStyleInterested: desiredCondition.workingStyleInterested,\n    conditionsSpecial: desiredCondition.conditionsSpecial,\n    conditionsOther: desiredCondition.conditionsOther\n  };\n\n  return desiredConditionView;\n}\nfunction mappingAwardHistoryToView(awardHistory: IAwardHistory) {\n  const awardHistoryView: IAwardHistory = {\n    title: awardHistory.title,\n    awardYear: {\n      ...awardHistory.awardYear,\n      data: convertDateTimeFullCrawler(awardHistory.awardYear.data)\n    }\n  };\n  return awardHistoryView;\n}\n\nexport {\n  mappingProfileToProfileView,\n  mappingResumeToView,\n  mappingEducationToView,\n  mappingDesiredConditionToView,\n  mappingProjectToView,\n  mappingLaborityToView,\n  mappingActivityToView,\n  mappingAwardHistoryToView\n};\n"]}]}