{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/service/file.service.ts","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/service/file.service.ts","mtime":1582427774589},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import axios from 'axios';\nimport RestClient from './rest-client';\nimport { API_FE_TOPWORK_URL } from 'app/config/constants';\nimport { CookiesStorage } from 'app/shared/utils';\nexport default class FileService {\n    constructor(restClient = new RestClient()) {\n        this.restClient = restClient;\n    }\n    downloadFileSever(params) {\n        const { id, name } = params;\n        axios({\n            url: `${API_FE_TOPWORK_URL}attachments/${id}/download`,\n            method: 'GET',\n            responseType: 'blob',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Authorization: CookiesStorage.getAccessToken()\n            }\n        }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', name);\n            document.body.appendChild(link);\n            link.click();\n        });\n    }\n    uploadAttachment(params) {\n        const data = new FormData();\n        data.append('files', params);\n        return axios({\n            url: `${API_FE_TOPWORK_URL}attachments`,\n            method: 'POST',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Authorization: CookiesStorage.getAccessToken()\n            },\n            data\n        });\n    }\n}\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/service/file.service.ts","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/service/file.service.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,CAAC,OAAO,OAAO,WAAW;IAE9B,YAAY,UAAU,GAAG,IAAI,UAAU,EAAE;QACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,iBAAiB,CAAC,MAAM;QACtB,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;QAC5B,KAAK,CAAC;YACJ,GAAG,EAAE,GAAG,kBAAkB,eAAe,EAAE,WAAW;YACtD,MAAM,EAAE,KAAK;YACb,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE;gBACP,MAAM,EAAE,mCAAmC;gBAC3C,cAAc,EAAE,mCAAmC;gBACnD,aAAa,EAAE,cAAc,CAAC,cAAc,EAAE;aAC/C;SACF,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACjB,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClE,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,MAAM;QACrB,MAAM,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAE7B,OAAO,KAAK,CAAC;YACX,GAAG,EAAE,GAAG,kBAAkB,aAAa;YACvC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,MAAM,EAAE,mCAAmC;gBAC3C,cAAc,EAAE,mCAAmC;gBACnD,aAAa,EAAE,cAAc,CAAC,cAAc,EAAE;aAC/C;YACD,IAAI;SACL,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import axios from 'axios';\n\nimport RestClient from './rest-client';\nimport { API_FE_TOPWORK_URL } from 'app/config/constants';\nimport { CookiesStorage } from 'app/shared/utils';\n\nexport default class FileService {\n  restClient: RestClient;\n  constructor(restClient = new RestClient()) {\n    this.restClient = restClient;\n  }\n\n  downloadFileSever(params) {\n    const { id, name } = params;\n    axios({\n      url: `${API_FE_TOPWORK_URL}attachments/${id}/download`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: CookiesStorage.getAccessToken()\n      }\n    }).then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', name);\n      document.body.appendChild(link);\n      link.click();\n    });\n  }\n\n  uploadAttachment(params) {\n    const data = new FormData();\n    data.append('files', params);\n\n    return axios({\n      url: `${API_FE_TOPWORK_URL}attachments`,\n      method: 'POST',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: CookiesStorage.getAccessToken()\n      },\n      data\n    });\n  }\n}\n"]}]}