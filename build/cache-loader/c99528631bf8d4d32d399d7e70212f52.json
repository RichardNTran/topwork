{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/model/mapping/candidate.mapping.ts","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/model/mapping/candidate.mapping.ts","mtime":1582103313176},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["function mappingCandidateListModel(response) {\n    const candidates = [];\n    response.forEach(item => {\n        candidates.push(mappingCandidateModel(item));\n    });\n    return candidates;\n}\nfunction mappingCandidateModel(item) {\n    let task;\n    task = {\n        candidate: {\n            id: item.id,\n            age: item.age,\n            avatar: item.avatar,\n            fullName: item.fullName,\n            gender: item.gender,\n            appliedDate: item.appliedDate\n        },\n        entryId: item.entryId,\n        company: item.company || {},\n        createdAt: item.createdAt,\n        updatedAt: item.updatedAt,\n        isStar: item.task && item.task.isStar,\n        jobOffer: item.jobOffer,\n        jobSiteId: item.jobSiteId,\n        occupationId: item.occupationId,\n        id: item.task && item.task.id,\n        selectedJobSite: item.task && item.task.selectedJobSite,\n        selectionStatusId: item.task && item.task.selectionStatusId,\n        selectionStepId: item.task && item.task.selectionStepId,\n        snoozeTime: item.task && item.task.snoozeTime,\n        status: item.task && item.task.status,\n        user: item.user,\n        interview: item.interview,\n        furiganaName: item.furiganaName,\n        birthday: item.birthday,\n        isManually: item.isManually,\n        attachments: item.attachments || {},\n        age: item.age\n    };\n    return task;\n}\nexport { mappingCandidateModel, mappingCandidateListModel };\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/model/mapping/candidate.mapping.ts","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/model/mapping/candidate.mapping.ts"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,CAAC,QAAQ;IACzC,MAAM,UAAU,GAAY,EAAE,CAAC;IAE/B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACtB,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,qBAAqB,CAAC,IAAI;IACjC,IAAI,IAAW,CAAC;IAEhB,IAAI,GAAG;QACL,SAAS,EAAE;YACT,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B;QACD,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE;QAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;QACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,YAAY,EAAE,IAAI,CAAC,YAAY;QAC/B,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;QAC7B,eAAe,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe;QACvD,iBAAiB,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB;QAC3D,eAAe,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe;QACvD,UAAU,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU;QAC7C,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;QACrC,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,YAAY,EAAE,IAAI,CAAC,YAAY;QAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE;QACnC,GAAG,EAAE,IAAI,CAAC,GAAG;KACd,CAAC;IAEF,OAAO,IAAI,CAAC;AACd,CAAC;AAED,OAAO,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,CAAC","sourcesContent":["import { ITask } from 'app/shared/model';\n\nfunction mappingCandidateListModel(response) {\n  const candidates: ITask[] = [];\n\n  response.forEach(item => {\n    candidates.push(mappingCandidateModel(item));\n  });\n\n  return candidates;\n}\n\nfunction mappingCandidateModel(item) {\n  let task: ITask;\n\n  task = {\n    candidate: {\n      id: item.id,\n      age: item.age,\n      avatar: item.avatar,\n      fullName: item.fullName,\n      gender: item.gender,\n      appliedDate: item.appliedDate\n    },\n    entryId: item.entryId,\n    company: item.company || {},\n    createdAt: item.createdAt,\n    updatedAt: item.updatedAt,\n    isStar: item.task && item.task.isStar,\n    jobOffer: item.jobOffer,\n    jobSiteId: item.jobSiteId,\n    occupationId: item.occupationId,\n    id: item.task && item.task.id,\n    selectedJobSite: item.task && item.task.selectedJobSite,\n    selectionStatusId: item.task && item.task.selectionStatusId,\n    selectionStepId: item.task && item.task.selectionStepId,\n    snoozeTime: item.task && item.task.snoozeTime,\n    status: item.task && item.task.status,\n    user: item.user,\n    interview: item.interview,\n    furiganaName: item.furiganaName,\n    birthday: item.birthday,\n    isManually: item.isManually,\n    attachments: item.attachments || {},\n    age: item.age\n  };\n\n  return task;\n}\n\nexport { mappingCandidateModel, mappingCandidateListModel };\n"]}]}