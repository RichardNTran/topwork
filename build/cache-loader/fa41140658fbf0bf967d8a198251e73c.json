{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/input-calendar-field.tsx","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/input-calendar-field.tsx","mtime":1582103313046},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport { SingleDatePicker } from 'react-dates';\nimport i18next from 'i18next';\nimport moment from 'moment';\nimport { MONTH_YEAR_JAPAN_FORMAT, MONTH_YEAR_NORMAL_FORMAT, APPLIED_DATE_FORMAT } from 'app/shared/constant';\nimport { SelectField } from 'app/shared/component';\nimport { composeValidators } from 'app/shared/utils';\nmoment.locale(i18next.language);\nconst formatDate = value => moment(value);\nconst normalizeDate = value => value.value.format();\nclass InputCalendarField extends Component {\n    constructor(props) {\n        super(props);\n        this.handleFocusChange = value => {\n            const { focused } = value;\n            this.setState({ focused });\n        };\n        this.renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\n            const monthOptions = [];\n            const yearOptions = [];\n            const currentYear = moment().year();\n            for (let i = currentYear; i >= currentYear - 80; i--) {\n                yearOptions.push({\n                    label: i,\n                    value: i\n                });\n            }\n            moment.months().map((label, value) => {\n                monthOptions.push({\n                    label: value + 1,\n                    value\n                });\n            });\n            const selectedYear = yearOptions.filter(item => item.value === month.year());\n            const selectedMonth = monthOptions.filter(item => item.value === month.month());\n            return (React.createElement(\"div\", { className: \"calendar-select-top\" },\n                React.createElement(SelectField, { value: selectedMonth, options: monthOptions, onChange: e => onMonthSelect(month, e.value), className: \"calendar-dropdown calendar-month\" }),\n                React.createElement(SelectField, { value: selectedYear, options: yearOptions, onChange: e => onYearSelect(month, e.value), className: \"calendar-dropdown calendar-year mg-l-5\" })));\n        };\n        this.state = {\n            focused: false,\n            showDefaultInputIcon: true\n        };\n    }\n    render() {\n        const { name, validates } = this.props;\n        const { selectedDate, handleChangeDate, customInputIcon, placeholder, label, isRequired, isOutsideRange, showMonthYear } = this.props;\n        const { focused, showDefaultInputIcon } = this.state;\n        const monthyearFormat = i18next.language === 'ja' ? MONTH_YEAR_JAPAN_FORMAT : MONTH_YEAR_NORMAL_FORMAT;\n        return (React.createElement(\"div\", { className: \"datepicker-iconfield w-100\" },\n            label && (React.createElement(\"label\", { className: \"label-control\" },\n                label,\n                isRequired && React.createElement(\"sup\", { className: \"required\" }, \"*\"))),\n            React.createElement(Field, { name: name, normalize: normalizeDate, format: formatDate, validate: validates ? composeValidators(...validates) : null }, ({ input, meta }) => {\n                const hasError = meta.submitFailed && meta.error;\n                return (React.createElement(\"div\", { className: \"input-content\" },\n                    React.createElement(SingleDatePicker, { id: \"calendar\", anchorDirection: \"left\", date: selectedDate, focused: focused, showDefaultInputIcon: showDefaultInputIcon, customInputIcon: customInputIcon, monthFormat: monthyearFormat, displayFormat: APPLIED_DATE_FORMAT, calendarInfoPosition: \"after\", placeholder: placeholder, numberOfMonths: 1, hideKeyboardShortcutsPanel: true, daySize: 32, transitionDuration: 0, isOutsideRange: isOutsideRange, onDateChange: value => {\n                            input.onChange(value);\n                            handleChangeDate(value);\n                        }, onFocusChange: this.handleFocusChange, renderMonthElement: showMonthYear ? this.renderMonthElement : null }),\n                    hasError ? React.createElement(\"span\", { className: \"error\" },\n                        \" \",\n                        meta.error,\n                        \" \") : ''));\n            })));\n    }\n}\nexport { InputCalendarField };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/input-calendar-field.tsx","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/input-calendar-field.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport momentPropTypes from 'react-moment-proptypes';\nimport { SingleDatePicker } from 'react-dates';\nimport i18next from 'i18next';\nimport moment from 'moment';\n\nimport { MONTH_YEAR_JAPAN_FORMAT, MONTH_YEAR_NORMAL_FORMAT, APPLIED_DATE_FORMAT } from 'app/shared/constant';\nimport { SelectField } from 'app/shared/component';\nimport { composeValidators } from 'app/shared/utils';\n\nmoment.locale(i18next.language);\n\ninterface ICalendarFieldProps {\n  placeholder?: string;\n  name: string;\n  className?: any;\n  value?: string;\n  datepickerId: string;\n  selectedDate: momentPropTypes.momentObj;\n  handleChangeDate: (value: momentPropTypes.momentObj) => void;\n  customInputIcon?: any;\n  validates?: any;\n  label?: string;\n  isRequired?: boolean;\n  isOutsideRange?: any;\n  showMonthYear?: boolean;\n}\n\ninterface ICalendarFieldState {\n  focused: boolean;\n  showDefaultInputIcon: boolean;\n}\nconst formatDate = value => moment(value);\nconst normalizeDate = value => value.value.format();\nclass InputCalendarField extends Component<ICalendarFieldProps, ICalendarFieldState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: false,\n      showDefaultInputIcon: true\n    };\n  }\n\n  handleFocusChange = value => {\n    const { focused } = value;\n    this.setState({ focused });\n  };\n\n  renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\n    const monthOptions = [];\n    const yearOptions = [];\n    const currentYear = moment().year();\n    for (let i = currentYear; i >= currentYear - 80; i--) {\n      yearOptions.push({\n        label: i,\n        value: i\n      });\n    }\n\n    moment.months().map((label, value) => {\n      monthOptions.push({\n        label: value + 1,\n        value\n      });\n    });\n\n    const selectedYear = yearOptions.filter(item => item.value === month.year());\n    const selectedMonth = monthOptions.filter(item => item.value === month.month());\n\n    return (\n      <div className=\"calendar-select-top\">\n        <SelectField\n          value={selectedMonth}\n          options={monthOptions}\n          onChange={e => onMonthSelect(month, e.value)}\n          className=\"calendar-dropdown calendar-month\"\n        />\n        <SelectField\n          value={selectedYear}\n          options={yearOptions}\n          onChange={e => onYearSelect(month, e.value)}\n          className=\"calendar-dropdown calendar-year mg-l-5\"\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { name, validates } = this.props;\n    const { selectedDate, handleChangeDate, customInputIcon, placeholder, label, isRequired, isOutsideRange, showMonthYear } = this.props;\n    const { focused, showDefaultInputIcon } = this.state;\n    const monthyearFormat = i18next.language === 'ja' ? MONTH_YEAR_JAPAN_FORMAT : MONTH_YEAR_NORMAL_FORMAT;\n\n    return (\n      <div className=\"datepicker-iconfield w-100\">\n        {label && (\n          <label className=\"label-control\">\n            {label}\n            {isRequired && <sup className=\"required\">*</sup>}\n          </label>\n        )}\n        <Field name={name} normalize={normalizeDate} format={formatDate} validate={validates ? composeValidators(...validates) : null}>\n          {({ input, meta }) => {\n            const hasError = meta.submitFailed && meta.error;\n            return (\n              <div className=\"input-content\">\n                <SingleDatePicker\n                  id=\"calendar\"\n                  anchorDirection=\"left\"\n                  date={selectedDate}\n                  focused={focused}\n                  showDefaultInputIcon={showDefaultInputIcon}\n                  customInputIcon={customInputIcon}\n                  monthFormat={monthyearFormat}\n                  displayFormat={APPLIED_DATE_FORMAT}\n                  calendarInfoPosition=\"after\"\n                  placeholder={placeholder}\n                  numberOfMonths={1}\n                  hideKeyboardShortcutsPanel\n                  daySize={32}\n                  transitionDuration={0}\n                  isOutsideRange={isOutsideRange}\n                  onDateChange={value => {\n                    input.onChange(value);\n                    handleChangeDate(value);\n                  }}\n                  onFocusChange={this.handleFocusChange}\n                  renderMonthElement={showMonthYear ? this.renderMonthElement : null}\n                />\n                {hasError ? <span className=\"error\"> {meta.error} </span> : ''}\n              </div>\n            );\n          }}\n        </Field>\n      </div>\n    );\n  }\n}\n\nexport { InputCalendarField };\n"]}]}