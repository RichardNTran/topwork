{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-3!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/select-field.tsx","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/select-field.tsx","mtime":1582103313050},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/react-hot-loader/webpack.js","mtime":1569983885062},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React from 'react';\nimport Select, { components } from 'react-select';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ButtonIcon } from 'app/shared/component';\nconst ClearIndicator = props => components.ClearIndicator && (React.createElement(components.ClearIndicator, Object.assign({ className: \"select-clear-indicator\" }, props),\n    React.createElement(\"i\", { className: \"delete-icon opleicon-x\" })));\nconst IndicatorSeparator = props => components.IndicatorSeparator && (React.createElement(components.IndicatorSeparator, Object.assign({ className: \"select-indicator-separator\" }, props), props.children));\nconst DropdownIndicator = props => components.DropdownIndicator && (React.createElement(components.DropdownIndicator, Object.assign({ className: \"select-indicator\" }, props),\n    React.createElement(\"span\", { className: \"select-icon\" })));\nconst Control = props => components.Control && (React.createElement(components.Control, Object.assign({ className: `select-control ${props.isFocused ? 'is-opened' : ''}` }, props), props.children));\nconst Menu = props => components.Menu && (React.createElement(components.Menu, Object.assign({ className: \"select-menu\" }, props), props.children));\nconst MenuList = props => components.MenuList && (React.createElement(components.MenuList, Object.assign({ className: \"select-menu-list\" }, props), props.children));\nconst Option = props => (React.createElement(components.Option, Object.assign({ className: `select-option-item ${props.isSelected ? 'selected-option' : ''} ${props.isFocused ? 'select-focused-option' : ''}` }, props),\n    props.selectProps.showThumbnail && (React.createElement(\"div\", { className: \"avatar avatar-xs select-image\" }, props.data && props.data.image ? (React.createElement(\"img\", { src: props.data.image, className: \"rounded-circle\", alt: \"\" })) : (React.createElement(\"span\", { className: \"avatar-initial select-image rounded-circle bg-skin-user\" }, props.data.label.charAt(0))))),\n    React.createElement(\"span\", { className: \"select-label\" }, props.children)));\nconst MultiValueContainer = props => (React.createElement(components.MultiValueContainer, Object.assign({}, props, { className: \"select-multi-value-container\" }), props.children));\nconst EmptyMultiValueContainer = () => React.createElement(components.MultiValueContainer, null);\nconst MultiValue = props => (React.createElement(components.MultiValue, Object.assign({}, props, { className: \"select-multi-value\" }), props.children));\nconst MultiValueRemove = props => (React.createElement(\"div\", { className: \"remove-value\" },\n    React.createElement(components.MultiValueRemove, Object.assign({}, props),\n        React.createElement(\"span\", { className: \"opleicon-x\" }))));\nconst MultiValueLabel = props => (React.createElement(\"div\", { className: \"select-multi-label\" },\n    React.createElement(components.MultiValueLabel, Object.assign({}, props, { className: \"select-multi-label-1\" }),\n        props.data &&\n            (props.data.image ? (React.createElement(\"div\", { className: \"avatar avatar-xs select-image\" },\n                React.createElement(\"img\", { src: props.data.image, className: \"rounded-circle\", alt: \"\" }))) : (React.createElement(\"div\", { className: \"avatar avatar-xs select-image\" },\n                React.createElement(\"span\", { className: \"avatar-initial select-image rounded-circle bg-skin-user\" }, props.data.label.charAt(0))))),\n        React.createElement(\"span\", { className: \"select-label\" }, props.children))));\nconst ValueContainer = props => (React.createElement(components.ValueContainer, Object.assign({}, props, { className: \"value-container\" }), props.children));\nconst SelectContainer = props => (React.createElement(components.SelectContainer, Object.assign({}, props, { className: \"select-value-container\" }), props.children));\nconst Input = props => (React.createElement(components.Input, Object.assign({}, props, { className: \"select-input\" }), props.children));\nconst Placeholder = props => (React.createElement(components.Placeholder, Object.assign({}, props, { className: \"select-placeholder\" }), props.children));\nconst SelectField = props => {\n    const { placeholder, name, value, className, disabled, multi, showList, menuPlacement, showThumbnail, options, extendOptions, onChange, onRemove, noOptionsMessage } = props;\n    if (!options)\n        return null;\n    const handleRemoveValue = index => {\n        value.splice(index, 1);\n        return value;\n    };\n    return (React.createElement(\"div\", { className: `select-custom ${className || ''}` },\n        React.createElement(Select, { noOptionsMessage: noOptionsMessage, name: name, value: value, components: {\n                DropdownIndicator,\n                ClearIndicator,\n                IndicatorSeparator,\n                Input,\n                Placeholder,\n                Control,\n                ValueContainer,\n                MultiValueContainer: !showList ? MultiValueContainer : EmptyMultiValueContainer,\n                MultiValue,\n                MultiValueLabel,\n                MultiValueRemove,\n                Menu,\n                MenuList,\n                Option,\n                SelectContainer\n            }, placeholder: placeholder, options: extendOptions ? [...extendOptions, ...options] : options, isMulti: multi, isDisabled: disabled, onChange: onChange, isSearchable: true, menuPlacement: menuPlacement || 'bottom', maxMenuHeight: 150, showThumbnail: showThumbnail }),\n        showList && value && value.length > 0 && (React.createElement(PerfectScrollbar, { className: \"list-item-content mg-t-5\" }, value.map((item, index) => {\n            return (React.createElement(\"div\", { key: index, className: \"d-flex align-items-center justify-content-between pd-t-5 pd-b-5 pd-l-10\" },\n                React.createElement(\"div\", { className: \"select-user-info d-flex align-items-center\" },\n                    item &&\n                        (item.image ? (React.createElement(\"div\", { className: \"avatar avatar-xs select-image\" },\n                            React.createElement(\"img\", { src: item.image, className: \"rounded-circle\", alt: \"\" }))) : (React.createElement(\"div\", { className: \"avatar avatar-xs select-image\" },\n                            React.createElement(\"span\", { className: \"avatar-initial select-image rounded-circle bg-skin-user\" }, item.label.charAt(0))))),\n                    React.createElement(\"span\", { className: \"select-label\" }, item.label)),\n                React.createElement(ButtonIcon, { iconName: \"x\", containerClass: \"remove-value bd-0-f\", onClick: () => onRemove(handleRemoveValue(index)) })));\n        })))));\n};\nexport { SelectField };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/select-field.tsx","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/form/select-field.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select, { components } from 'react-select';\nimport { ISelectItem } from 'app/shared/model/layout';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ButtonIcon } from 'app/shared/component';\n\nexport interface ISelectFieldModel {\n  placeholder?: string;\n  name?: string;\n  value?: any;\n  className?: any;\n  disabled?: boolean;\n  multi?: boolean;\n  showList?: boolean;\n  options?: ISelectItem[];\n  showThumbnail?: boolean;\n  onChange?: any;\n  onRemove?: any;\n  menuPlacement?: string;\n  extendOptions?: ISelectItem[];\n  noOptionsMessage?: () => string;\n}\n\nconst ClearIndicator = props =>\n  components.ClearIndicator && (\n    <components.ClearIndicator className=\"select-clear-indicator\" {...props}>\n      <i className=\"delete-icon opleicon-x\" />\n    </components.ClearIndicator>\n  );\n\nconst IndicatorSeparator = props =>\n  components.IndicatorSeparator && (\n    <components.IndicatorSeparator className=\"select-indicator-separator\" {...props}>\n      {props.children}\n    </components.IndicatorSeparator>\n  );\n\nconst DropdownIndicator = props =>\n  components.DropdownIndicator && (\n    <components.DropdownIndicator className=\"select-indicator\" {...props}>\n      <span className=\"select-icon\" />\n    </components.DropdownIndicator>\n  );\n\nconst Control = props =>\n  components.Control && (\n    <components.Control className={`select-control ${props.isFocused ? 'is-opened' : ''}`} {...props}>\n      {props.children}\n    </components.Control>\n  );\n\nconst Menu = props =>\n  components.Menu && (\n    <components.Menu className=\"select-menu\" {...props}>\n      {props.children}\n    </components.Menu>\n  );\n\nconst MenuList = props =>\n  components.MenuList && (\n    <components.MenuList className=\"select-menu-list\" {...props}>\n      {props.children}\n    </components.MenuList>\n  );\n\nconst Option = props => (\n  <components.Option\n    className={`select-option-item ${props.isSelected ? 'selected-option' : ''} ${props.isFocused ? 'select-focused-option' : ''}`}\n    {...props}\n  >\n    {props.selectProps.showThumbnail && (\n      <div className=\"avatar avatar-xs select-image\">\n        {props.data && props.data.image ? (\n          <img src={props.data.image} className=\"rounded-circle\" alt=\"\" />\n        ) : (\n          <span className=\"avatar-initial select-image rounded-circle bg-skin-user\">{props.data.label.charAt(0)}</span>\n        )}\n      </div>\n    )}\n    <span className=\"select-label\">{props.children}</span>\n  </components.Option>\n);\n\nconst MultiValueContainer = props => (\n  <components.MultiValueContainer {...props} className=\"select-multi-value-container\">\n    {props.children}\n  </components.MultiValueContainer>\n);\n\nconst EmptyMultiValueContainer = () => <components.MultiValueContainer />;\n\nconst MultiValue = props => (\n  <components.MultiValue {...props} className=\"select-multi-value\">\n    {props.children}\n  </components.MultiValue>\n);\n\nconst MultiValueRemove = props => (\n  <div className=\"remove-value\">\n    <components.MultiValueRemove {...props}>\n      <span className=\"opleicon-x\" />\n    </components.MultiValueRemove>\n  </div>\n);\n\nconst MultiValueLabel = props => (\n  <div className=\"select-multi-label\">\n    <components.MultiValueLabel {...props} className=\"select-multi-label-1\">\n      {props.data &&\n        (props.data.image ? (\n          <div className=\"avatar avatar-xs select-image\">\n            <img src={props.data.image} className=\"rounded-circle\" alt=\"\" />\n          </div>\n        ) : (\n          <div className=\"avatar avatar-xs select-image\">\n            <span className=\"avatar-initial select-image rounded-circle bg-skin-user\">{props.data.label.charAt(0)}</span>\n          </div>\n        ))}\n      <span className=\"select-label\">{props.children}</span>\n    </components.MultiValueLabel>\n  </div>\n);\n\nconst ValueContainer = props => (\n  <components.ValueContainer {...props} className=\"value-container\">\n    {props.children}\n  </components.ValueContainer>\n);\n\nconst SelectContainer = props => (\n  <components.SelectContainer {...props} className=\"select-value-container\">\n    {props.children}\n  </components.SelectContainer>\n);\n\nconst Input = props => (\n  <components.Input {...props} className=\"select-input\">\n    {props.children}\n  </components.Input>\n);\n\nconst Placeholder = props => (\n  <components.Placeholder {...props} className=\"select-placeholder\">\n    {props.children}\n  </components.Placeholder>\n);\n\nconst SelectField: React.SFC<ISelectFieldModel> = props => {\n  const {\n    placeholder,\n    name,\n    value,\n    className,\n    disabled,\n    multi,\n    showList,\n    menuPlacement,\n    showThumbnail,\n    options,\n    extendOptions,\n    onChange,\n    onRemove,\n    noOptionsMessage\n  } = props;\n  if (!options) return null;\n\n  const handleRemoveValue = index => {\n    value.splice(index, 1);\n    return value;\n  };\n\n  return (\n    <div className={`select-custom ${className || ''}`}>\n      <Select\n        noOptionsMessage={noOptionsMessage}\n        name={name}\n        value={value}\n        components={{\n          DropdownIndicator,\n          ClearIndicator,\n          IndicatorSeparator,\n          Input,\n          Placeholder,\n          Control,\n          ValueContainer,\n          MultiValueContainer: !showList ? MultiValueContainer : EmptyMultiValueContainer,\n          MultiValue,\n          MultiValueLabel,\n          MultiValueRemove,\n          Menu,\n          MenuList,\n          Option,\n          SelectContainer\n        }}\n        placeholder={placeholder}\n        options={extendOptions ? [...extendOptions, ...options] : options}\n        isMulti={multi}\n        isDisabled={disabled}\n        onChange={onChange}\n        isSearchable\n        menuPlacement={menuPlacement || 'bottom'}\n        maxMenuHeight={150}\n        showThumbnail={showThumbnail}\n      />\n\n      {showList && value && value.length > 0 && (\n        <PerfectScrollbar className=\"list-item-content mg-t-5\">\n          {value.map((item, index) => {\n            return (\n              <div key={index} className=\"d-flex align-items-center justify-content-between pd-t-5 pd-b-5 pd-l-10\">\n                <div className=\"select-user-info d-flex align-items-center\">\n                  {item &&\n                    (item.image ? (\n                      <div className=\"avatar avatar-xs select-image\">\n                        <img src={item.image} className=\"rounded-circle\" alt=\"\" />\n                      </div>\n                    ) : (\n                      <div className=\"avatar avatar-xs select-image\">\n                        <span className=\"avatar-initial select-image rounded-circle bg-skin-user\">{item.label.charAt(0)}</span>\n                      </div>\n                    ))}\n                  <span className=\"select-label\">{item.label}</span>\n                </div>\n                <ButtonIcon iconName=\"x\" containerClass=\"remove-value bd-0-f\" onClick={() => onRemove(handleRemoveValue(index))} />\n              </div>\n            );\n          })}\n        </PerfectScrollbar>\n      )}\n    </div>\n  );\n};\n\nexport { SelectField };\n"]}]}