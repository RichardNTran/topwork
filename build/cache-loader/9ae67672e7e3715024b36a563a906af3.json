{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/upload-file/index.tsx","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/upload-file/index.tsx","mtime":1582103313107},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport { FontIcon, ButtonIcon, ReduxLoading, LoadingButton } from 'app/shared/component';\nimport i18next from 'app/shared/locales';\nimport { ATTACHMENT_ACTION } from 'app/redux/constant';\nclass UploadFile extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeHandler = e => {\n            const { onUpload, index } = this.props;\n            if (!e || !e.target || !e.target.files || !e.target.files[0]) {\n                return;\n            }\n            this.setState({\n                selectedFile: e.target.files[0]\n            }, () => {\n                onUpload &&\n                    onUpload({\n                        file: this.state.selectedFile,\n                        index,\n                        callback: () => this.handleUploadSuccess(),\n                        callbackError: () => this.handleUploadError()\n                    });\n            });\n        };\n        this.handleUploadSuccess = () => {\n            const { onHandleUploadSuccess } = this.props;\n            onHandleUploadSuccess && onHandleUploadSuccess();\n            this.setState({\n                originalFile: this.state.selectedFile\n            });\n        };\n        this.handleUploadError = () => {\n            const { onHandleUploadError } = this.props;\n            onHandleUploadError && onHandleUploadError();\n            this.setState({\n                selectedFile: this.state.originalFile\n            });\n        };\n        this.handleRemove = () => {\n            const { onRemove } = this.props;\n            onRemove && onRemove();\n        };\n        this.handleLoading = isLoading => {\n            if (this.state.isLoading !== isLoading)\n                this.setState({ isLoading });\n        };\n        this.state = {\n            originalFile: null,\n            selectedFile: null\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { file } = nextProps;\n        this.setState({\n            originalFile: file,\n            selectedFile: file\n        });\n    }\n    render() {\n        const { containerClassName, fileType, index } = this.props;\n        const { selectedFile } = this.state;\n        return (React.createElement(ReduxLoading, { expectedKey: index, isLoadingComponent: true, onChangeLoadingStatus: this.handleLoading, expectedAction: ATTACHMENT_ACTION.UPLOAD_ATTACHMENT },\n            React.createElement(\"div\", { className: `upload-file-container d-flex align-items-center justify-content-between ${containerClassName}` },\n                React.createElement(\"div\", { className: \"upload-file-content d-flex align-items-center\" },\n                    React.createElement(\"div\", { className: \"upload-file-button\" },\n                        React.createElement(\"input\", { type: \"file\", className: \"input-file\", accept: fileType, onChange: this.onChangeHandler }),\n                        React.createElement(LoadingButton, { containerClass: \"btn btn-sm btn-primary tx-semibold tx-sfdisplay-semibold\", title: \"\", isLoading: this.state.isLoading, loadingTitle: i18next.t('comment.buttons.submitting') },\n                            React.createElement(\"span\", { className: \"icon-left\" },\n                                React.createElement(FontIcon, { iconName: \"upload\", className: \"snooze-icon\" })),\n                            React.createElement(\"label\", { className: \"button-text tx-sfdisplay-medium\" }, i18next.t('attachment.file_selection')))),\n                    React.createElement(\"div\", { className: \"file-info d-flex align-items-center pd-l-15\" }, selectedFile && selectedFile.name ? (React.createElement(React.Fragment, null,\n                        React.createElement(FontIcon, { iconName: \"file\", className: \"icon-16\" }),\n                        React.createElement(\"label\", { className: \"button-text tx-sfdisplay-medium mg-b-0 pd-l-5 line-height-1\" }, selectedFile.name))) : (React.createElement(\"label\", { className: \"button-text tx-sfdisplay-medium mg-b-0 pd-l-5 line-height-1\" }, i18next.t('attachment.not_selected'))))),\n                React.createElement(ButtonIcon, { iconName: \"x-circle\", containerClass: \"btn btn-icon button-remove-item pd-0\", iconClass: \"icon-16\", onClick: this.handleRemove }))));\n    }\n}\nexport { UploadFile };\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/upload-file/index.tsx","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/upload-file/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FontIcon, ButtonIcon, ReduxLoading, LoadingButton } from 'app/shared/component';\nimport i18next from 'app/shared/locales';\nimport { ATTACHMENT_ACTION } from 'app/redux/constant';\n\ninterface IUploadFileProps {\n  containerClassName?: any;\n  fileType?: any;\n  onUpload?: any;\n  onRemove?: any;\n  onHandleUploadError?: any;\n  onHandleUploadSuccess?: any;\n  index?: any;\n  file?: any;\n}\n\ninterface IUploadFileState {\n  originalFile?: any;\n  selectedFile?: any;\n  isLoading?: boolean;\n}\n\nclass UploadFile extends Component<IUploadFileProps, IUploadFileState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      originalFile: null,\n      selectedFile: null\n    };\n  }\n\n  onChangeHandler = e => {\n    const { onUpload, index } = this.props;\n\n    if (!e || !e.target || !e.target.files || !e.target.files[0]) {\n      return;\n    }\n\n    this.setState(\n      {\n        selectedFile: e.target.files[0]\n      },\n      () => {\n        onUpload &&\n          onUpload({\n            file: this.state.selectedFile,\n            index,\n            callback: () => this.handleUploadSuccess(),\n            callbackError: () => this.handleUploadError()\n          });\n      }\n    );\n  };\n\n  handleUploadSuccess = () => {\n    const { onHandleUploadSuccess } = this.props;\n\n    onHandleUploadSuccess && onHandleUploadSuccess();\n\n    this.setState({\n      originalFile: this.state.selectedFile\n    });\n  };\n\n  handleUploadError = () => {\n    const { onHandleUploadError } = this.props;\n\n    onHandleUploadError && onHandleUploadError();\n\n    this.setState({\n      selectedFile: this.state.originalFile\n    });\n  };\n\n  handleRemove = () => {\n    const { onRemove } = this.props;\n\n    onRemove && onRemove();\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { file } = nextProps;\n\n    this.setState({\n      originalFile: file,\n      selectedFile: file\n    });\n  }\n\n  handleLoading = isLoading => {\n    if (this.state.isLoading !== isLoading) this.setState({ isLoading });\n  };\n\n  render() {\n    const { containerClassName, fileType, index } = this.props;\n    const { selectedFile } = this.state;\n\n    return (\n      <ReduxLoading\n        expectedKey={index}\n        isLoadingComponent\n        onChangeLoadingStatus={this.handleLoading}\n        expectedAction={ATTACHMENT_ACTION.UPLOAD_ATTACHMENT}\n      >\n        <div className={`upload-file-container d-flex align-items-center justify-content-between ${containerClassName}`}>\n          <div className=\"upload-file-content d-flex align-items-center\">\n            <div className=\"upload-file-button\">\n              <input type=\"file\" className=\"input-file\" accept={fileType} onChange={this.onChangeHandler} />\n              <LoadingButton\n                containerClass=\"btn btn-sm btn-primary tx-semibold tx-sfdisplay-semibold\"\n                title=\"\"\n                isLoading={this.state.isLoading}\n                loadingTitle={i18next.t('comment.buttons.submitting')}\n              >\n                <span className=\"icon-left\">\n                  <FontIcon iconName=\"upload\" className=\"snooze-icon\" />\n                </span>\n                <label className=\"button-text tx-sfdisplay-medium\">{i18next.t('attachment.file_selection')}</label>\n              </LoadingButton>\n            </div>\n            <div className=\"file-info d-flex align-items-center pd-l-15\">\n              {selectedFile && selectedFile.name ? (\n                <React.Fragment>\n                  <FontIcon iconName=\"file\" className=\"icon-16\" />\n                  <label className=\"button-text tx-sfdisplay-medium mg-b-0 pd-l-5 line-height-1\">{selectedFile.name}</label>\n                </React.Fragment>\n              ) : (\n                <label className=\"button-text tx-sfdisplay-medium mg-b-0 pd-l-5 line-height-1\">\n                  {i18next.t('attachment.not_selected')}\n                </label>\n              )}\n            </div>\n          </div>\n          <ButtonIcon\n            iconName=\"x-circle\"\n            containerClass=\"btn btn-icon button-remove-item pd-0\"\n            iconClass=\"icon-16\"\n            onClick={this.handleRemove}\n          />\n        </div>\n      </ReduxLoading>\n    );\n  }\n}\n\nexport { UploadFile };\n"]}]}