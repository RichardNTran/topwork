{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/selection-occupation-field.tsx","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/selection-occupation-field.tsx","mtime":1582103313055},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport { connect } from 'react-redux';\nimport { getOccupations } from 'app/redux/actions';\nimport { SelectField } from 'app/shared/component';\nimport _ from 'lodash';\nclass SelectionOccupationField extends Component {\n    constructor() {\n        super(...arguments);\n        this.handleChangeSelect = value => {\n            const { onChange } = this.props;\n            onChange && onChange(value);\n        };\n    }\n    componentDidMount() {\n        const { options, getOptionsAction } = this.props;\n        !options && getOptionsAction();\n    }\n    getSelectedValue(field, options) {\n        let selectedValue = null;\n        if (field && !_.isEmpty(field.label)) {\n            selectedValue = _.findLast(options, { label: (field || {}).label });\n        }\n        if (field && !_.isEmpty(field.value)) {\n            selectedValue = _.findLast(options, { value: (field || {}).value });\n        }\n        return selectedValue;\n    }\n    render() {\n        const { name, label, value, options, isRequired, placeholder, menuPlacement, extendOptions } = this.props;\n        const fullOptions = extendOptions ? extendOptions.concat(options) : options;\n        const selectedValue = this.getSelectedValue(value, fullOptions);\n        return (React.createElement(\"div\", { className: \"form-group\" },\n            label && (React.createElement(\"label\", { className: \"label-control\" },\n                label,\n                isRequired && React.createElement(\"sup\", { className: \"required\" }, \"*\"))),\n            React.createElement(Field, { name: name, options: options, defaultValue: value }, ({ input, meta }) => {\n                const hasError = meta.touched && meta.error;\n                return (React.createElement(SelectField, Object.assign({}, input, { value: selectedValue, name: name, options: options, extendOptions: extendOptions, placeholder: placeholder, menuPlacement: menuPlacement, onChange: this.handleChangeSelect })));\n            })));\n    }\n}\nconst mapStateToProps = state => {\n    const { appDataReducer } = state;\n    const { occupations } = appDataReducer;\n    return {\n        options: occupations\n    };\n};\nconst mapDispatchToProps = dispatch => ({\n    getOptionsAction: () => dispatch(getOccupations())\n});\nconst selectionOccupationField = connect(mapStateToProps, mapDispatchToProps)(SelectionOccupationField);\nexport { selectionOccupationField as SelectionOccupationField };\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/selection-occupation-field.tsx","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/selection-occupation-field.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport { connect } from 'react-redux';\nimport { getOccupations } from 'app/redux/actions';\n\nimport { SelectField } from 'app/shared/component';\nimport { ISelectItem } from 'app/shared/model/layout';\nimport _ from 'lodash';\n\ninterface ISelectionProps extends StateProps, DispatchProps {\n  name?: string;\n  label?: string;\n  value?: ISelectItem;\n  placeholder?: string;\n  extendOptions?: ISelectItem[];\n  getOptionsAction: () => void;\n  onChange?: (value) => void;\n  classNameStyle?: string;\n  menuPlacement?: string;\n  isRequired?: boolean;\n}\nclass SelectionOccupationField extends Component<ISelectionProps> {\n  componentDidMount() {\n    const { options, getOptionsAction } = this.props;\n    !options && getOptionsAction();\n  }\n\n  handleChangeSelect = value => {\n    const { onChange } = this.props;\n    onChange && onChange(value);\n  };\n\n  getSelectedValue(field: ISelectItem, options: ISelectItem[]) {\n    let selectedValue = null;\n    if (field && !_.isEmpty(field.label)) {\n      selectedValue = _.findLast(options, { label: (field || {}).label });\n    }\n\n    if (field && !_.isEmpty(field.value)) {\n      selectedValue = _.findLast(options, { value: (field || {}).value });\n    }\n    return selectedValue;\n  }\n\n  render() {\n    const { name, label, value, options, isRequired, placeholder, menuPlacement, extendOptions } = this.props;\n    const fullOptions = extendOptions ? extendOptions.concat(options) : options;\n    const selectedValue = this.getSelectedValue(value, fullOptions);\n    return (\n      <div className=\"form-group\">\n        {label && (\n          <label className=\"label-control\">\n            {label}\n            {isRequired && <sup className=\"required\">*</sup>}\n          </label>\n        )}\n        <Field name={name} options={options} defaultValue={value}>\n          {({ input, meta }) => {\n            const hasError = meta.touched && meta.error;\n            return (\n              <SelectField\n                {...input}\n                value={selectedValue}\n                name={name}\n                options={options}\n                extendOptions={extendOptions}\n                placeholder={placeholder}\n                menuPlacement={menuPlacement}\n                onChange={this.handleChangeSelect}\n              />\n            );\n          }}\n        </Field>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { appDataReducer } = state;\n  const { occupations } = appDataReducer;\n  return {\n    options: occupations\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getOptionsAction: () => dispatch(getOccupations())\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nconst selectionOccupationField = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectionOccupationField);\n\nexport { selectionOccupationField as SelectionOccupationField };\n"]}]}