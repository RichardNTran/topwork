{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/radio.group.tsx","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/radio.group.tsx","mtime":1582103313050},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React from 'react';\nimport { Field } from 'react-final-form';\nimport { RadioField } from './radio-field';\nimport { composeValidators } from 'app/shared/utils';\nconst RadioGroupField = props => {\n    const { options, name, className, validates, label, isRequired, classNameGroup, classNameItem } = props;\n    return (React.createElement(Field, { name: name, validate: validates ? composeValidators(...validates) : null }, ({ meta }) => {\n        const hasError = meta.submitFailed && meta.error;\n        return (React.createElement(\"div\", { className: `custom-group-radio ${className || ''} ${hasError ? 'has-error' : ''}` },\n            label && (React.createElement(\"label\", { className: \"label-control\" },\n                label,\n                isRequired && React.createElement(\"sup\", { className: \"required\" }, \"*\"))),\n            React.createElement(\"div\", { className: classNameGroup }, options.map((item, index) => (React.createElement(RadioField, { key: index.toString(), classNameItem: classNameItem, value: item.value, label: item.label, name: name, id: `${name}-${index.toString()}` })))),\n            hasError ? React.createElement(\"span\", { className: \"error\" },\n                \" \",\n                meta.error,\n                \" \") : ''));\n    }));\n};\nexport { RadioGroupField };\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/radio.group.tsx","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/form/radio.group.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,OAAO,EAAE,UAAU,EAAoB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAcrD,MAAM,eAAe,GAAqC,KAAK,CAAC,EAAE;IAChE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;IAExG,OAAO,CACL,oBAAC,KAAK,IAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAC5E,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC;QACjD,OAAO,CACL,6BAAK,SAAS,EAAE,sBAAsB,SAAS,IAAI,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;YACnF,KAAK,IAAI,CACR,+BAAO,SAAS,EAAC,eAAe;gBAC7B,KAAK;gBACL,UAAU,IAAI,6BAAK,SAAS,EAAC,UAAU,QAAQ,CAC1C,CACT;YACD,6BAAK,SAAS,EAAE,cAAc,IAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAC5B,oBAAC,UAAU,IACT,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,EACrB,aAAa,EAAE,aAAa,EAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,GAAG,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,GACjC,CACH,CAAC,CACE;YACL,QAAQ,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAC,OAAO;;gBAAG,IAAI,CAAC,KAAK;oBAAS,CAAC,CAAC,CAAC,EAAE,CAC1D,CACP,CAAC;IACJ,CAAC,CACK,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import React from 'react';\nimport { Field } from 'react-final-form';\n\nimport { RadioField, IRadioFieldModel } from './radio-field';\nimport { composeValidators } from 'app/shared/utils';\n\nexport interface IRadioGroupFieldModel {\n  className?: string;\n  classNameItem?: string;\n  name: string;\n  options: IRadioFieldModel[];\n  validates?: any;\n  label?: string;\n  isRequired?: boolean;\n  value?: any;\n  classNameGroup?: string;\n}\n\nconst RadioGroupField: React.SFC<IRadioGroupFieldModel> = props => {\n  const { options, name, className, validates, label, isRequired, classNameGroup, classNameItem } = props;\n\n  return (\n    <Field name={name} validate={validates ? composeValidators(...validates) : null}>\n      {({ meta }) => {\n        const hasError = meta.submitFailed && meta.error;\n        return (\n          <div className={`custom-group-radio ${className || ''} ${hasError ? 'has-error' : ''}`}>\n            {label && (\n              <label className=\"label-control\">\n                {label}\n                {isRequired && <sup className=\"required\">*</sup>}\n              </label>\n            )}\n            <div className={classNameGroup}>\n              {options.map((item, index) => (\n                <RadioField\n                  key={index.toString()}\n                  classNameItem={classNameItem}\n                  value={item.value}\n                  label={item.label}\n                  name={name}\n                  id={`${name}-${index.toString()}`}\n                />\n              ))}\n            </div>\n            {hasError ? <span className=\"error\"> {meta.error} </span> : ''}\n          </div>\n        );\n      }}\n    </Field>\n  );\n};\n\nexport { RadioGroupField };\n"]}]}