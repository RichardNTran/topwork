{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/suggestion/index.tsx","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/suggestion/index.tsx","mtime":1582103313102},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport Select, { components } from 'react-select';\nimport { Icon } from 'antd';\nimport i18next from 'app/shared/locales';\nconst IndicatorsContainer = props => components.IndicatorsContainer && (React.createElement(components.IndicatorsContainer, Object.assign({ className: \"suggestion-indicator-container\" }, props),\n    React.createElement(Icon, { type: \"search\" })));\nconst Control = props => components.Control && (React.createElement(components.Control, Object.assign({ className: \"suggestion-control-container\" }, props), props.children));\nconst Input = props => components.Input && (React.createElement(components.Input, Object.assign({ className: \"suggestion-input\" }, props), props.children));\nconst Menu = props => components.Menu && (React.createElement(components.Menu, Object.assign({ className: \"suggestion-menu-container\" }, props), props.children));\nconst MenuList = props => components.MenuList && (React.createElement(components.MenuList, Object.assign({ className: \"suggestion-menu-list-container\" }, props), props.children));\nconst Placeholder = props => components.Placeholder && (React.createElement(components.Placeholder, Object.assign({ className: \"suggestion-placeholder\" }, props), props.children));\nfunction renderThumbnail(data) {\n    if (data.image === 'none') {\n        return null;\n    }\n    if (data.image) {\n        return (React.createElement(\"div\", { className: \"avatar avatar-20 suggestion-image mg-t-1\" },\n            React.createElement(\"img\", { src: data.image, className: \"rounded-circle\", alt: \"\" })));\n    }\n    return (React.createElement(\"div\", { className: \"avatar avatar-20 suggestion-image mg-t-1\" },\n        React.createElement(\"span\", { className: \"avatar-initial select-image rounded-circle bg-skin-user\" }, data.label.charAt(0))));\n}\nconst Option = props => (React.createElement(components.Option, Object.assign({ className: `suggestion-option ${props.isSelected ? 'suggestion-selected-option' : ''} ${props.isFocused ? 'suggestion-focused-option' : ''}` }, props),\n    props.selectProps.showThumbnail && props.data && renderThumbnail(props.data),\n    React.createElement(\"span\", { className: \"suggestion-label\" }, props.children)));\nconst Panel = props => React.createElement(\"div\", Object.assign({ className: \"suggestion-list\" }, props));\nconst Dropdown = ({ children, isOpen, target, onClose, classNameDropDown }) => (React.createElement(\"div\", { className: `suggestion-wrap ${isOpen ? 'show' : ''}` },\n    target,\n    isOpen ? React.createElement(Panel, { className: `suggestion-list ${classNameDropDown ? classNameDropDown : ''}` }, children) : null,\n    isOpen ? React.createElement(Panel, { className: \"suggestion-overlay\", onClick: onClose }) : null));\nclass Suggestion extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleOpen = () => {\n            this.setState(state => ({ isOpen: !state.isOpen }));\n        };\n        this.onSelectChange = value => {\n            this.toggleOpen();\n            this.props.onChange(value);\n        };\n        this.state = {\n            isOpen: false\n        };\n    }\n    render() {\n        const { placeholder, name, value, className, classNameDropDown, disabled, multi, options, showThumbnail, menuPlacement, extendOptions, noOptionsMessage } = this.props;\n        const { isOpen } = this.state;\n        const fullOptions = extendOptions ? extendOptions.concat(options) : options;\n        return (React.createElement(\"div\", { className: `suggestion-custom ${className || ''}` },\n            React.createElement(Dropdown, { isOpen: isOpen, onClose: this.toggleOpen, classNameDropDown: classNameDropDown, target: React.createElement(\"button\", { type: \"button\", className: \"btn btn-light\", onClick: this.toggleOpen },\n                    showThumbnail && value && renderThumbnail(value),\n                    React.createElement(\"span\", { className: \"suggestion-icon\" }),\n                    React.createElement(\"span\", { className: \"suggestion-label\" }, value ? `${value.label}` : React.createElement(\"span\", { className: \"tx-placeholder\" }, placeholder))) },\n                React.createElement(Select, { autoFocus: true, backspaceRemovesValue: false, controlShouldRenderValue: false, components: { IndicatorsContainer, Control, Input, Placeholder, Menu, MenuList, Option }, hideSelectedOptions: false, noOptionsMessage: () => (noOptionsMessage ? noOptionsMessage : i18next.t('component.selectionField.noOptionsMessage')), isClearable: false, menuIsOpen: true, tabSelectsValue: false, name: name, value: value, placeholder: placeholder, options: fullOptions, isMulti: multi, isDisabled: disabled, onChange: this.onSelectChange, showThumbnail: showThumbnail, maxMenuHeight: 150, menuPlacement: menuPlacement || 'bottom' }))));\n    }\n}\nexport { Suggestion };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/suggestion/index.tsx","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/component/suggestion/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAY,MAAM,OAAO,CAAC;AACnD,OAAO,MAAM,EAAE,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAG5B,OAAO,OAAO,MAAM,oBAAoB,CAAC;AAsBzC,MAAM,mBAAmB,GAAG,KAAK,CAAC,EAAE,CAClC,UAAU,CAAC,mBAAmB,IAAI,CAChC,oBAAC,UAAU,CAAC,mBAAmB,kBAAC,SAAS,EAAC,gCAAgC,IAAK,KAAK;IAClF,oBAAC,IAAI,IAAC,IAAI,EAAC,QAAQ,GAAG,CACS,CAClC,CAAC;AAEJ,MAAM,OAAO,GAAG,KAAK,CAAC,EAAE,CACtB,UAAU,CAAC,OAAO,IAAI,CACpB,oBAAC,UAAU,CAAC,OAAO,kBAAC,SAAS,EAAC,8BAA8B,IAAK,KAAK,GACnE,KAAK,CAAC,QAAQ,CACI,CACtB,CAAC;AAEJ,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CACpB,UAAU,CAAC,KAAK,IAAI,CAClB,oBAAC,UAAU,CAAC,KAAK,kBAAC,SAAS,EAAC,kBAAkB,IAAK,KAAK,GACrD,KAAK,CAAC,QAAQ,CACE,CACpB,CAAC;AAEJ,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,CACnB,UAAU,CAAC,IAAI,IAAI,CACjB,oBAAC,UAAU,CAAC,IAAI,kBAAC,SAAS,EAAC,2BAA2B,IAAK,KAAK,GAC7D,KAAK,CAAC,QAAQ,CACC,CACnB,CAAC;AAEJ,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CACvB,UAAU,CAAC,QAAQ,IAAI,CACrB,oBAAC,UAAU,CAAC,QAAQ,kBAAC,SAAS,EAAC,gCAAgC,IAAK,KAAK,GACtE,KAAK,CAAC,QAAQ,CACK,CACvB,CAAC;AAEJ,MAAM,WAAW,GAAG,KAAK,CAAC,EAAE,CAC1B,UAAU,CAAC,WAAW,IAAI,CACxB,oBAAC,UAAU,CAAC,WAAW,kBAAC,SAAS,EAAC,wBAAwB,IAAK,KAAK,GACjE,KAAK,CAAC,QAAQ,CACQ,CAC1B,CAAC;AAEJ,SAAS,eAAe,CAAC,IAAI;IAC3B,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE;QACzB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,IAAI,CAAC,KAAK,EAAE;QACd,OAAO,CACL,6BAAK,SAAS,EAAC,0CAA0C;YACvD,6BAAK,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAC,gBAAgB,EAAC,GAAG,EAAC,EAAE,GAAG,CACtD,CACP,CAAC;KACH;IACD,OAAO,CACL,6BAAK,SAAS,EAAC,0CAA0C;QACvD,8BAAM,SAAS,EAAC,yDAAyD,IAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAQ,CACnG,CACP,CAAC;AACJ,CAAC;AAED,MAAM,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,CACtB,oBAAC,UAAU,CAAC,MAAM,kBAChB,SAAS,EAAE,qBAAqB,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,IAClF,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,EAClD,EAAE,IACE,KAAK;IAER,KAAK,CAAC,WAAW,CAAC,aAAa,IAAI,KAAK,CAAC,IAAI,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC;IAC7E,8BAAM,SAAS,EAAC,kBAAkB,IAAE,KAAK,CAAC,QAAQ,CAAQ,CACxC,CACrB,CAAC;AAEF,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,2CAAK,SAAS,EAAC,iBAAiB,IAAK,KAAK,EAAI,CAAC;AAEtE,MAAM,QAAQ,GAAG,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAC7E,6BAAK,SAAS,EAAE,mBAAmB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IACtD,MAAM;IACN,MAAM,CAAC,CAAC,CAAC,oBAAC,KAAK,IAAC,SAAS,EAAE,mBAAmB,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,EAAE,IAAG,QAAQ,CAAS,CAAC,CAAC,CAAC,IAAI;IACrH,MAAM,CAAC,CAAC,CAAC,oBAAC,KAAK,IAAC,SAAS,EAAC,oBAAoB,EAAC,OAAO,EAAE,OAAO,GAAI,CAAC,CAAC,CAAC,IAAI,CACvE,CACP,CAAC;AAEF,MAAM,UAAW,SAAQ,SAA6C;IACpE,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAOf,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,mBAAc,GAAG,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;QAbA,IAAI,CAAC,KAAK,GAAG;YACX,MAAM,EAAE,KAAK;SACd,CAAC;IACJ,CAAC;IAYD,MAAM;QACJ,MAAM,EACJ,WAAW,EACX,IAAI,EACJ,KAAK,EACL,SAAS,EACT,iBAAiB,EACjB,QAAQ,EACR,KAAK,EACL,OAAO,EACP,aAAa,EACb,aAAa,EACb,aAAa,EACb,gBAAgB,EACjB,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,MAAM,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAC5E,OAAO,CACL,6BAAK,SAAS,EAAE,qBAAqB,SAAS,IAAI,EAAE,EAAE;YACpD,oBAAC,QAAQ,IACP,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,IAAI,CAAC,UAAU,EACxB,iBAAiB,EAAE,iBAAiB,EACpC,MAAM,EACJ,gCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,eAAe,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU;oBACrE,aAAa,IAAI,KAAK,IAAI,eAAe,CAAC,KAAK,CAAC;oBACjD,8BAAM,SAAS,EAAC,iBAAiB,GAAG;oBACpC,8BAAM,SAAS,EAAC,kBAAkB,IAAE,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAC,gBAAgB,IAAE,WAAW,CAAQ,CAAQ,CACrH;gBAGX,oBAAC,MAAM,IACL,SAAS,QACT,qBAAqB,EAAE,KAAK,EAC5B,wBAAwB,EAAE,KAAK,EAC/B,UAAU,EAAE,EAAE,mBAAmB,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EACxF,mBAAmB,EAAE,KAAK,EAC1B,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,2CAA2C,CAAC,CAAC,EACtH,WAAW,EAAE,KAAK,EAClB,UAAU,QACV,eAAe,EAAE,KAAK,EACtB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,WAAW,EACpB,OAAO,EAAE,KAAK,EACd,UAAU,EAAE,QAAQ,EACpB,QAAQ,EAAE,IAAI,CAAC,cAAc,EAC7B,aAAa,EAAE,aAAa,EAC5B,aAAa,EAAE,GAAG,EAClB,aAAa,EAAE,aAAa,IAAI,QAAQ,GACxC,CACO,CACP,CACP,CAAC;IACJ,CAAC;CACF;AAED,OAAO,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Select, { components } from 'react-select';\nimport { Icon } from 'antd';\n\nimport { ISelectItem } from 'app/shared/model';\nimport i18next from 'app/shared/locales';\n\nexport interface ISuggestionProps {\n  placeholder?: string;\n  name?: string;\n  value?: any;\n  className?: any;\n  classNameDropDown?: any;\n  disabled?: boolean;\n  multi?: boolean;\n  options: ISelectItem[];\n  extendOptions?: ISelectItem[];\n  onChange?: any;\n  showThumbnail?: boolean;\n  menuPlacement?: string;\n  noOptionsMessage?: string;\n}\n\ninterface ISuggestionState {\n  isOpen: boolean;\n}\n\nconst IndicatorsContainer = props =>\n  components.IndicatorsContainer && (\n    <components.IndicatorsContainer className=\"suggestion-indicator-container\" {...props}>\n      <Icon type=\"search\" />\n    </components.IndicatorsContainer>\n  );\n\nconst Control = props =>\n  components.Control && (\n    <components.Control className=\"suggestion-control-container\" {...props}>\n      {props.children}\n    </components.Control>\n  );\n\nconst Input = props =>\n  components.Input && (\n    <components.Input className=\"suggestion-input\" {...props}>\n      {props.children}\n    </components.Input>\n  );\n\nconst Menu = props =>\n  components.Menu && (\n    <components.Menu className=\"suggestion-menu-container\" {...props}>\n      {props.children}\n    </components.Menu>\n  );\n\nconst MenuList = props =>\n  components.MenuList && (\n    <components.MenuList className=\"suggestion-menu-list-container\" {...props}>\n      {props.children}\n    </components.MenuList>\n  );\n\nconst Placeholder = props =>\n  components.Placeholder && (\n    <components.Placeholder className=\"suggestion-placeholder\" {...props}>\n      {props.children}\n    </components.Placeholder>\n  );\n\nfunction renderThumbnail(data) {\n  if (data.image === 'none') {\n    return null;\n  }\n  if (data.image) {\n    return (\n      <div className=\"avatar avatar-20 suggestion-image mg-t-1\">\n        <img src={data.image} className=\"rounded-circle\" alt=\"\" />\n      </div>\n    );\n  }\n  return (\n    <div className=\"avatar avatar-20 suggestion-image mg-t-1\">\n      <span className=\"avatar-initial select-image rounded-circle bg-skin-user\">{data.label.charAt(0)}</span>\n    </div>\n  );\n}\n\nconst Option = props => (\n  <components.Option\n    className={`suggestion-option ${props.isSelected ? 'suggestion-selected-option' : ''} ${\n      props.isFocused ? 'suggestion-focused-option' : ''\n    }`}\n    {...props}\n  >\n    {props.selectProps.showThumbnail && props.data && renderThumbnail(props.data)}\n    <span className=\"suggestion-label\">{props.children}</span>\n  </components.Option>\n);\n\nconst Panel = props => <div className=\"suggestion-list\" {...props} />;\n\nconst Dropdown = ({ children, isOpen, target, onClose, classNameDropDown }) => (\n  <div className={`suggestion-wrap ${isOpen ? 'show' : ''}`}>\n    {target}\n    {isOpen ? <Panel className={`suggestion-list ${classNameDropDown ? classNameDropDown : ''}`}>{children}</Panel> : null}\n    {isOpen ? <Panel className=\"suggestion-overlay\" onClick={onClose} /> : null}\n  </div>\n);\n\nclass Suggestion extends Component<ISuggestionProps, ISuggestionState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggleOpen = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  onSelectChange = value => {\n    this.toggleOpen();\n\n    this.props.onChange(value);\n  };\n\n  render() {\n    const {\n      placeholder,\n      name,\n      value,\n      className,\n      classNameDropDown,\n      disabled,\n      multi,\n      options,\n      showThumbnail,\n      menuPlacement,\n      extendOptions,\n      noOptionsMessage\n    } = this.props;\n    const { isOpen } = this.state;\n    const fullOptions = extendOptions ? extendOptions.concat(options) : options;\n    return (\n      <div className={`suggestion-custom ${className || ''}`}>\n        <Dropdown\n          isOpen={isOpen}\n          onClose={this.toggleOpen}\n          classNameDropDown={classNameDropDown}\n          target={\n            <button type=\"button\" className=\"btn btn-light\" onClick={this.toggleOpen}>\n              {showThumbnail && value && renderThumbnail(value)}\n              <span className=\"suggestion-icon\" />\n              <span className=\"suggestion-label\">{value ? `${value.label}` : <span className=\"tx-placeholder\">{placeholder}</span>}</span>\n            </button>\n          }\n        >\n          <Select\n            autoFocus\n            backspaceRemovesValue={false}\n            controlShouldRenderValue={false}\n            components={{ IndicatorsContainer, Control, Input, Placeholder, Menu, MenuList, Option }}\n            hideSelectedOptions={false}\n            noOptionsMessage={() => (noOptionsMessage ? noOptionsMessage : i18next.t('component.selectionField.noOptionsMessage'))}\n            isClearable={false}\n            menuIsOpen\n            tabSelectsValue={false}\n            name={name}\n            value={value}\n            placeholder={placeholder}\n            options={fullOptions}\n            isMulti={multi}\n            isDisabled={disabled}\n            onChange={this.onSelectChange}\n            showThumbnail={showThumbnail}\n            maxMenuHeight={150}\n            menuPlacement={menuPlacement || 'bottom'}\n          />\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport { Suggestion };\n"]}]}