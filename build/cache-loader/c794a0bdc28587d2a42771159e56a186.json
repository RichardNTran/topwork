{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/attachment.saga.ts","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/attachment.saga.ts","mtime":1582103313011},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import { put, all, takeEvery } from 'redux-saga/effects';\nimport { ATTACHMENT_ACTION, SUCCESS, FAILURE, REQUEST } from '../constant';\nimport { fileService } from 'app/service';\nfunction* uploadAttachment(action) {\n    try {\n        const { index, file, callback } = action.payload;\n        const result = yield fileService.uploadAttachment(file);\n        const attachment = result && result.data && result.data.data ? result.data.data[0] : {};\n        const data = {\n            id: attachment.id,\n            name: attachment.attributes && attachment.attributes.name,\n            path: attachment.attributes && attachment.attributes.path,\n            size: attachment.attributes && attachment.attributes.size\n        };\n        yield put({\n            type: SUCCESS(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT),\n            payload: { attachment: data, index },\n            specialKey: action.specialKey\n        });\n        callback && callback();\n    }\n    catch (e) {\n        const { callbackError } = action.payload;\n        callbackError && callbackError();\n        yield put({ type: FAILURE(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT), errors: e.errors, specialKey: action.specialKey });\n    }\n}\nfunction* removeAttachment(action) {\n    try {\n        const { index } = action.payload;\n        yield put({\n            type: SUCCESS(ATTACHMENT_ACTION.REMOVE_ATTACHMENT),\n            payload: { index }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(ATTACHMENT_ACTION.REMOVE_ATTACHMENT), errors: e.errors });\n    }\n}\nfunction* setAttachment(action) {\n    try {\n        const { payload } = action;\n        yield put({\n            type: SUCCESS(ATTACHMENT_ACTION.SET_ATTACHMENT),\n            payload: {\n                attachments: payload\n            }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(ATTACHMENT_ACTION.SET_ATTACHMENT), errors: e.errors });\n    }\n}\nexport default function* attachmentSaga() {\n    yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT), uploadAttachment)]);\n    yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.REMOVE_ATTACHMENT), removeAttachment)]);\n    yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.SET_ATTACHMENT), setAttachment)]);\n}\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/attachment.saga.ts","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/attachment.saga.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { put, all, takeEvery } from 'redux-saga/effects';\n\nimport { ATTACHMENT_ACTION, SUCCESS, FAILURE, REQUEST } from '../constant';\nimport { fileService } from 'app/service';\n\nfunction* uploadAttachment(action) {\n  try {\n    const { index, file, callback } = action.payload;\n    const result = yield fileService.uploadAttachment(file);\n    const attachment = result && result.data && result.data.data ? result.data.data[0] : {};\n    const data = {\n      id: attachment.id,\n      name: attachment.attributes && attachment.attributes.name,\n      path: attachment.attributes && attachment.attributes.path,\n      size: attachment.attributes && attachment.attributes.size\n    };\n\n    yield put({\n      type: SUCCESS(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT),\n      payload: { attachment: data, index },\n      specialKey: action.specialKey\n    });\n\n    callback && callback();\n  } catch (e) {\n    const { callbackError } = action.payload;\n    callbackError && callbackError();\n    yield put({ type: FAILURE(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT), errors: e.errors, specialKey: action.specialKey });\n  }\n}\n\nfunction* removeAttachment(action) {\n  try {\n    const { index } = action.payload;\n    yield put({\n      type: SUCCESS(ATTACHMENT_ACTION.REMOVE_ATTACHMENT),\n      payload: { index }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(ATTACHMENT_ACTION.REMOVE_ATTACHMENT), errors: e.errors });\n  }\n}\n\nfunction* setAttachment(action) {\n  try {\n    const { payload } = action;\n    yield put({\n      type: SUCCESS(ATTACHMENT_ACTION.SET_ATTACHMENT),\n      payload: {\n        attachments: payload\n      }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(ATTACHMENT_ACTION.SET_ATTACHMENT), errors: e.errors });\n  }\n}\n\nexport default function* attachmentSaga() {\n  yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.UPLOAD_ATTACHMENT), uploadAttachment)]);\n  yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.REMOVE_ATTACHMENT), removeAttachment)]);\n  yield all([takeEvery(REQUEST(ATTACHMENT_ACTION.SET_ATTACHMENT), setAttachment)]);\n}\n"]}]}