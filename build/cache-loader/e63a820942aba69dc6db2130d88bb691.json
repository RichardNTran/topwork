{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/header/default-header.tsx","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/header/default-header.tsx","mtime":1582428842573},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from 'app/config/history';\nimport { getCurrentUserInfo, logout } from 'app/redux/actions';\nimport { Dropdown, FontIcon } from 'app/shared/component';\nimport { CookieKey, topworkPlatformRoute } from 'app/shared/constant';\nimport { FE_TOPWORK_URL } from 'app/config/constants';\nimport { CookiesStorage } from 'app/shared/utils';\nimport i18next from 'app/shared/locales';\nclass HeaderBarContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogoutToUserSever = () => {\n            CookiesStorage.clearData();\n            CookiesStorage.clearCookieData(CookieKey.deviceToken);\n            CookiesStorage.clearCookieData(CookieKey.pastUrl);\n            history.push(topworkPlatformRoute.Logout);\n        };\n        this.navigateToUserServer = () => {\n            window.location.assign(FE_TOPWORK_URL);\n        };\n        this.updateInputValue = evt => {\n            this.setState({\n                searchKey: evt.target.value\n            });\n        };\n        this.state = {\n            searchKey: ''\n        };\n    }\n    renderProfileDropdownHeader(currentUser) {\n        if (!currentUser)\n            return null;\n        const firstRole = (currentUser.roles || [])[0];\n        const firstCompany = (currentUser.companies || [])[0];\n        return (React.createElement(\"div\", { className: \"header-dropdown\" },\n            React.createElement(\"ul\", { className: \"info-content\" },\n                React.createElement(\"li\", { className: \"item\" },\n                    React.createElement(\"span\", { className: \"tx-semibold\" }, (firstCompany || {}).name)),\n                React.createElement(\"li\", { className: \"item\" },\n                    React.createElement(\"span\", { className: \"tx-12 tx-color-03\" }, (firstRole || {}).name)),\n                React.createElement(\"li\", { className: \"item pd-t-10-f\" }, currentUser.fullName))));\n    }\n    render() {\n        const settingItems = [\n            {\n                link: '#',\n                icon: 'external-link',\n                label: i18next.t('header.setting.external_service_link')\n            },\n            {\n                link: '#',\n                icon: 'list',\n                label: i18next.t('header.setting.template_management')\n            },\n            {\n                link: '#',\n                icon: 'sidebar',\n                label: i18next.t('header.setting.sidebar_management')\n            }\n        ];\n        const profileItems = [\n            // {\n            //   link: userPlatformRoute.AccountInfo,\n            //   icon: 'edit',\n            //   label: 'アカウント情報'\n            // },\n            {\n                selectAction: this.handleLogoutToUserSever,\n                iconSmall: 'log-out',\n                label: 'ログアウト'\n            }\n        ];\n        const serviceItems = [\n            {\n                selectAction: this.navigateToUserServer,\n                icon: 'airplay',\n                label: 'Topwork User Platform'\n            }\n        ];\n        const { currentUser } = this.props;\n        return (React.createElement(\"div\", { className: \"content-header align-items-center justify-content-end\" },\n            React.createElement(\"div\", { className: \"nav align-items-center justify-content-end\" },\n                React.createElement(Dropdown, { className: \"dropdown-profile dropdown-headerbar dropdown-setting mg-l-15 pd-t-6 pd-b-5\", menuContainerClass: \"dropdown-menu-right tx-13-f\", items: settingItems },\n                    React.createElement(FontIcon, { iconName: \"settings\", className: \"icon-settings valign-middle icon-20\" })),\n                React.createElement(Dropdown, { className: \"dropdown-profile dropdown-headerbar dropdown-inline dropdown-switchservices mg-l-15 pd-t-6 pd-b-5\", menuContainerClass: \"dropdown-menu-right tx-13-f\", items: serviceItems },\n                    React.createElement(FontIcon, { iconName: \"grid\", className: \"icon-grid\" })),\n                React.createElement(Dropdown, { renderHeader: () => this.renderProfileDropdownHeader(currentUser || {}), className: \"dropdown-profile dropdown-headerbar mg-l-15\", menuContainerClass: \"dropdown-menu-right tx-13-f\", items: profileItems },\n                    React.createElement(\"div\", { className: \"avatar avatar-28\" }, currentUser && currentUser.avatar ? (React.createElement(\"img\", { src: (currentUser || {}).avatar, className: \"rounded-circle\", alt: \"\" })) : (React.createElement(\"span\", { className: \"avatar-initial rounded-circle bg-skin-user\" }, (currentUser || {}).fullName && currentUser.fullName.charAt(0))))))));\n    }\n}\nconst mapStateToProps = storeState => {\n    const { authReducer } = storeState;\n    const { error, currentUser } = authReducer;\n    return { error, currentUser };\n};\nconst mapDispatchToProps = dispatch => ({\n    getCurrentUserInfoAction: () => dispatch(getCurrentUserInfo()),\n    logoutAction: () => dispatch(logout())\n});\nconst headerBarContainer = connect(mapStateToProps, mapDispatchToProps)(HeaderBarContainer);\nexport { headerBarContainer as HeaderBarContainer };\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/header/default-header.tsx","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/shared/component/header/default-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport history from 'app/config/history';\nimport { getCurrentUserInfo, logout } from 'app/redux/actions';\nimport { Dropdown, FontIcon } from 'app/shared/component';\nimport { CookieKey, topworkPlatformRoute } from 'app/shared/constant';\nimport { IDropdownItem, IAccountInfo } from 'app/shared/model';\nimport { FE_TOPWORK_URL } from 'app/config/constants';\nimport { CookiesStorage } from 'app/shared/utils';\nimport i18next from 'app/shared/locales';\n\ninterface IHeaderBarProps extends StateProps, DispatchProps {\n  logoutAction: () => void;\n}\n\ninterface IHeaderBarState {\n  searchKey: string;\n}\n\nclass HeaderBarContainer extends Component<IHeaderBarProps, IHeaderBarState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: ''\n    };\n  }\n\n  handleLogoutToUserSever = () => {\n    CookiesStorage.clearData();\n    CookiesStorage.clearCookieData(CookieKey.deviceToken);\n    CookiesStorage.clearCookieData(CookieKey.pastUrl);\n    history.push(topworkPlatformRoute.Logout);\n  };\n\n  navigateToUserServer = () => {\n    window.location.assign(FE_TOPWORK_URL);\n  };\n\n  updateInputValue = evt => {\n    this.setState({\n      searchKey: evt.target.value\n    });\n  };\n\n  renderProfileDropdownHeader(currentUser: IAccountInfo) {\n    if (!currentUser) return null;\n    const firstRole = (currentUser.roles || [])[0];\n    const firstCompany = (currentUser.companies || [])[0];\n    return (\n      <div className=\"header-dropdown\">\n        <ul className=\"info-content\">\n          <li className=\"item\">\n            <span className=\"tx-semibold\">{(firstCompany || {}).name}</span>\n          </li>\n          <li className=\"item\">\n            <span className=\"tx-12 tx-color-03\">{(firstRole || {}).name}</span>\n          </li>\n          <li className=\"item pd-t-10-f\">{currentUser.fullName}</li>\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    const settingItems: IDropdownItem[] = [\n      {\n        link: '#',\n        icon: 'external-link',\n        label: i18next.t('header.setting.external_service_link')\n      },\n      {\n        link: '#',\n        icon: 'list',\n        label: i18next.t('header.setting.template_management')\n      },\n      {\n        link: '#',\n        icon: 'sidebar',\n        label: i18next.t('header.setting.sidebar_management')\n      }\n    ];\n\n    const profileItems: IDropdownItem[] = [\n      // {\n      //   link: userPlatformRoute.AccountInfo,\n      //   icon: 'edit',\n      //   label: 'アカウント情報'\n      // },\n      {\n        selectAction: this.handleLogoutToUserSever,\n        iconSmall: 'log-out',\n        label: 'ログアウト'\n      }\n    ];\n\n    const serviceItems: IDropdownItem[] = [\n      {\n        selectAction: this.navigateToUserServer,\n        icon: 'airplay',\n        label: 'Topwork User Platform'\n      }\n    ];\n    const { currentUser } = this.props;\n    return (\n      <div className=\"content-header align-items-center justify-content-end\">\n        <div className=\"nav align-items-center justify-content-end\">\n          <Dropdown\n            className=\"dropdown-profile dropdown-headerbar dropdown-setting mg-l-15 pd-t-6 pd-b-5\"\n            menuContainerClass=\"dropdown-menu-right tx-13-f\"\n            items={settingItems}\n          >\n            <FontIcon iconName=\"settings\" className=\"icon-settings valign-middle icon-20\" />\n          </Dropdown>\n          <Dropdown\n            className=\"dropdown-profile dropdown-headerbar dropdown-inline dropdown-switchservices mg-l-15 pd-t-6 pd-b-5\"\n            menuContainerClass=\"dropdown-menu-right tx-13-f\"\n            items={serviceItems}\n          >\n            <FontIcon iconName=\"grid\" className=\"icon-grid\" />\n          </Dropdown>\n          <Dropdown\n            renderHeader={() => this.renderProfileDropdownHeader(currentUser || {})}\n            className=\"dropdown-profile dropdown-headerbar mg-l-15\"\n            menuContainerClass=\"dropdown-menu-right tx-13-f\"\n            items={profileItems}\n          >\n            <div className=\"avatar avatar-28\">\n              {currentUser && currentUser.avatar ? (\n                <img src={(currentUser || {}).avatar} className=\"rounded-circle\" alt=\"\" />\n              ) : (\n                <span className=\"avatar-initial rounded-circle bg-skin-user\">\n                  {(currentUser || {}).fullName && currentUser.fullName.charAt(0)}\n                </span>\n              )}\n            </div>\n          </Dropdown>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => {\n  const { authReducer } = storeState;\n  const { error, currentUser } = authReducer;\n  return { error, currentUser };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUserInfoAction: () => dispatch(getCurrentUserInfo()),\n  logoutAction: () => dispatch(logout())\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nconst headerBarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderBarContainer);\n\nexport { headerBarContainer as HeaderBarContainer };\n"]}]}