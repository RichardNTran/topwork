{"remainingRequest":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/work-center/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/app-data.saga.ts","dependencies":[{"path":"/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/app-data.saga.ts","mtime":1582103313010},{"path":"/Users/eru-longtn/work-center/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/work-center/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/work-center/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import _ from 'lodash';\nimport { put, all, takeLeading, takeLatest } from 'redux-saga/effects';\nimport { deserializerResponse } from 'app/shared/utils/common';\nimport { APP_DATA_ACTION, SUCCESS, FAILURE, REQUEST } from '../constant';\nimport { mappingSelectItemsToViews, mappingSelectUserItemsToViews, mappingJobsitesServerToViews } from 'app/shared/model';\nimport { appDataService } from 'app/service';\nfunction* getAllAppData() {\n    // yield getTaskSelectionSteps();\n    // yield getTaskSelectionStatus();\n    // yield getTaskAssignees();\n    // yield getJobsites();\n    // yield getOccupations();\n    yield put({ type: SUCCESS(APP_DATA_ACTION.GET_ALL_APP_DATA) });\n    // yield getJobOffers();\n}\nfunction* getTaskSelectionSteps() {\n    try {\n        const result = yield appDataService.getTaskSelectionSteps();\n        const listData = yield deserializerResponse(result);\n        const normalSteps = [];\n        const entrySteps = [];\n        const fullSteps = mappingSelectItemsToViews(listData);\n        _.map(fullSteps, step => {\n            step.isEntry ? entrySteps.push(step) : normalSteps.push(step);\n        });\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS),\n            payload: {\n                taskSelectionSteps: normalSteps,\n                entrySelectionSteps: entrySteps\n            }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS), errors: e.errors });\n    }\n}\nfunction* getTaskSelectionStatus() {\n    try {\n        const result = yield appDataService.getTaskSelectionStatus();\n        const listData = yield deserializerResponse(result);\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS),\n            payload: { taskSelectionStatus: mappingSelectItemsToViews(listData) }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS), errors: e.errors });\n    }\n}\nfunction* getTaskAssignees() {\n    try {\n        const result = yield appDataService.getTaskAssignees();\n        const listData = yield deserializerResponse(result);\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_TASK_ASSIGNEES),\n            payload: { taskAsignees: mappingSelectUserItemsToViews(listData) }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_ASSIGNEES), errors: e.errors });\n    }\n}\nfunction* getJobsites() {\n    try {\n        const result = yield appDataService.getJobsites();\n        const listData = yield deserializerResponse(result);\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_JOBSITES),\n            payload: {\n                jobsites: mappingJobsitesServerToViews(listData),\n                jobsitesEntry: listData\n            }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_JOBSITES), errors: e.errors });\n    }\n}\nfunction* getOccupations(action) {\n    try {\n        const result = yield appDataService.getOccupations();\n        const listData = yield deserializerResponse(result);\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_OCCUPATIONS),\n            payload: { occupations: mappingSelectItemsToViews(listData) }\n        });\n        if (action && action.payload && action.payload.callback) {\n            action.payload.callback();\n        }\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_OCCUPATIONS), errors: e.errors });\n    }\n}\nfunction* getJobOffers() {\n    try {\n        const result = yield appDataService.getJobOffers();\n        const listData = yield deserializerResponse(result);\n        yield put({\n            type: SUCCESS(APP_DATA_ACTION.GET_JOB_OFFER),\n            payload: { jobOffers: mappingSelectItemsToViews(listData) }\n        });\n    }\n    catch (e) {\n        yield put({ type: FAILURE(APP_DATA_ACTION.GET_JOB_OFFER), errors: e.errors });\n    }\n}\nexport default function* appDataSaga() {\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS), getTaskSelectionSteps)]);\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS), getTaskSelectionStatus)]);\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_ASSIGNEES), getTaskAssignees)]);\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_JOBSITES), getJobsites)]);\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_OCCUPATIONS), getOccupations)]);\n    yield all([takeLatest(REQUEST(APP_DATA_ACTION.GET_ALL_APP_DATA), getAllAppData)]);\n    yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_JOB_OFFER), getJobOffers)]);\n}\n",{"version":3,"file":"/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/app-data.saga.ts","sourceRoot":"","sources":["/Users/eru-longtn/work-center/node_modules/tslint-loader/index.js!/Users/eru-longtn/work-center/src/main/webapp/app/redux/saga/app-data.saga.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { put, all, takeLeading, takeLatest } from 'redux-saga/effects';\nimport { deserializerResponse } from 'app/shared/utils/common';\n\nimport { APP_DATA_ACTION, SUCCESS, FAILURE, REQUEST } from '../constant';\nimport {\n  ISelectUserItemServer,\n  ISelectItemServer,\n  IJobsiteServer,\n  mappingSelectItemsToViews,\n  mappingSelectUserItemsToViews,\n  mappingJobsitesServerToViews,\n  ISelectItem\n} from 'app/shared/model';\nimport { appDataService } from 'app/service';\n\nfunction* getAllAppData() {\n  // yield getTaskSelectionSteps();\n  // yield getTaskSelectionStatus();\n  // yield getTaskAssignees();\n  // yield getJobsites();\n  // yield getOccupations();\n  yield put({ type: SUCCESS(APP_DATA_ACTION.GET_ALL_APP_DATA) });\n  // yield getJobOffers();\n}\n\nfunction* getTaskSelectionSteps() {\n  try {\n    const result = yield appDataService.getTaskSelectionSteps();\n    const listData = yield deserializerResponse(result);\n    const normalSteps: ISelectItem[] = [];\n    const entrySteps: ISelectItem[] = [];\n    const fullSteps = mappingSelectItemsToViews(listData as ISelectItemServer[]);\n    _.map(fullSteps, step => {\n      step.isEntry ? entrySteps.push(step) : normalSteps.push(step);\n    });\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS),\n      payload: {\n        taskSelectionSteps: normalSteps,\n        entrySelectionSteps: entrySteps\n      }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS), errors: e.errors });\n  }\n}\n\nfunction* getTaskSelectionStatus() {\n  try {\n    const result = yield appDataService.getTaskSelectionStatus();\n    const listData = yield deserializerResponse(result);\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS),\n      payload: { taskSelectionStatus: mappingSelectItemsToViews(listData as ISelectItemServer[]) }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS), errors: e.errors });\n  }\n}\n\nfunction* getTaskAssignees() {\n  try {\n    const result = yield appDataService.getTaskAssignees();\n    const listData = yield deserializerResponse(result);\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_TASK_ASSIGNEES),\n      payload: { taskAsignees: mappingSelectUserItemsToViews(listData as ISelectUserItemServer[]) }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_TASK_ASSIGNEES), errors: e.errors });\n  }\n}\n\nfunction* getJobsites() {\n  try {\n    const result = yield appDataService.getJobsites();\n    const listData = yield deserializerResponse(result);\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_JOBSITES),\n      payload: {\n        jobsites: mappingJobsitesServerToViews(listData as IJobsiteServer[]),\n        jobsitesEntry: listData as IJobsiteServer[]\n      }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_JOBSITES), errors: e.errors });\n  }\n}\n\nfunction* getOccupations(action?: any) {\n  try {\n    const result = yield appDataService.getOccupations();\n    const listData = yield deserializerResponse(result);\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_OCCUPATIONS),\n      payload: { occupations: mappingSelectItemsToViews(listData as ISelectItemServer[]) }\n    });\n\n    if (action && action.payload && action.payload.callback) {\n      action.payload.callback();\n    }\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_OCCUPATIONS), errors: e.errors });\n  }\n}\n\nfunction* getJobOffers() {\n  try {\n    const result = yield appDataService.getJobOffers();\n    const listData = yield deserializerResponse(result);\n    yield put({\n      type: SUCCESS(APP_DATA_ACTION.GET_JOB_OFFER),\n      payload: { jobOffers: mappingSelectItemsToViews(listData as ISelectItemServer[]) }\n    });\n  } catch (e) {\n    yield put({ type: FAILURE(APP_DATA_ACTION.GET_JOB_OFFER), errors: e.errors });\n  }\n}\n\nexport default function* appDataSaga() {\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_SELECTION_STEPS), getTaskSelectionSteps)]);\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_SELECTION_STATUS), getTaskSelectionStatus)]);\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_TASK_ASSIGNEES), getTaskAssignees)]);\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_JOBSITES), getJobsites)]);\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_OCCUPATIONS), getOccupations)]);\n  yield all([takeLatest(REQUEST(APP_DATA_ACTION.GET_ALL_APP_DATA), getAllAppData)]);\n  yield all([takeLeading(REQUEST(APP_DATA_ACTION.GET_JOB_OFFER), getJobOffers)]);\n}\n"]}]}