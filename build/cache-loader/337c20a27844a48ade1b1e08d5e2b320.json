{"remainingRequest":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js??ref--5-2!/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/task.mapping.ts","dependencies":[{"path":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/task.mapping.ts","mtime":1582103313179},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/cache-loader/dist/cjs.js","mtime":1569983888264},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/thread-loader/dist/cjs.js","mtime":1569983892807},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/ts-loader/index.js","mtime":1569983892971},{"path":"/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js","mtime":1566205911452}],"contextDependencies":[],"result":["import _ from 'lodash';\nimport moment from 'moment';\nimport { JobSite } from '../business';\nimport { DAY_MONTH_LOCALE, APP_TIME_FORMAT, APP_YEAR_MONTH_DATE_FORMAT } from 'app/shared/constant';\nimport i18next from 'app/shared/locales';\nfunction mappingSelectUserItemServerToView(item) {\n    const selectItem = {\n        label: item.fullName,\n        value: item.id,\n        image: item.avatar\n    };\n    return selectItem;\n}\nfunction mappingSelectItemServerToView(item) {\n    const selectItem = Object.assign(Object.assign({}, item), { label: item.name, value: item.id, image: item.image, priority: item.priority || null, isEntry: item.isEntry || null, availableCurrentSteps: item.availableCurrentSteps || null });\n    return selectItem;\n}\nfunction mappingSelectItemsToViews(items) {\n    const selectItems = [];\n    items.forEach(element => {\n        selectItems.push(mappingSelectItemServerToView(element));\n    });\n    return selectItems;\n}\nfunction mappingSelectUserItemsToViews(items) {\n    const selectItems = [];\n    items.forEach(element => {\n        selectItems.push(mappingSelectUserItemServerToView(element));\n    });\n    return selectItems;\n}\nfunction mappingJobsiteServerToView(item) {\n    const selectItem = {\n        label: item.title,\n        value: item.id,\n        image: item.title === JobSite.another || item.isInternal ? null : `content/images/logos/jobsite/${item.title}.png`,\n        isInternal: item.isInternal\n    };\n    return selectItem;\n}\nfunction mappingJobsitesServerToViews(item) {\n    const selectItems = [];\n    item.forEach(element => {\n        selectItems.push(mappingJobsiteServerToView(element));\n    });\n    return selectItems;\n}\nfunction mappingTasksToTaskGroups(items, isSnooze) {\n    const momentLocale = i18next.language === 'ja' ? 'ja' : 'en';\n    moment.locale(momentLocale);\n    const taskGroups = [];\n    const grouped = _.groupBy(items, item => {\n        if (isSnooze) {\n            return moment(item.snoozeTime)\n                .startOf('day')\n                .format();\n        }\n        return moment(item.updatedAt)\n            .startOf('day')\n            .format();\n    });\n    _.forEach(grouped, (value, key) => {\n        taskGroups.push({\n            fullDateTime: key,\n            time: moment(key).isSame(moment(), 'day') ? i18next.t('taskInbox.today') : moment(key).format(DAY_MONTH_LOCALE),\n            tasks: value\n        });\n    });\n    return taskGroups;\n}\nfunction mappingInterview(item) {\n    const selectItem = {\n        id: item.id,\n        value: item.id,\n        label: `${moment(item.startDate).format(APP_YEAR_MONTH_DATE_FORMAT)} ${moment(item.startDate).format(APP_TIME_FORMAT)} ~ ${moment(item.endDate).format(APP_TIME_FORMAT)} ${item.title || ''}`,\n        startDate: item.startDate,\n        endDate: item.endDate,\n        place: item.place,\n        selectionStep: item.selectionStep,\n        title: item.title\n    };\n    return selectItem;\n}\nfunction mappingInterviewList(items) {\n    const selectItems = [];\n    items.forEach(element => {\n        selectItems.push(mappingInterview(element));\n    });\n    return selectItems;\n}\nexport { mappingSelectItemServerToView, mappingSelectItemsToViews, mappingSelectUserItemsToViews, mappingJobsitesServerToViews, mappingTasksToTaskGroups, mappingInterview, mappingInterviewList };\n",{"version":3,"file":"/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/task.mapping.ts","sourceRoot":"","sources":["/Users/eru-longtn/opela-agent-fe/node_modules/tslint-loader/index.js!/Users/eru-longtn/opela-agent-fe/src/main/webapp/app/shared/model/mapping/task.mapping.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,OAAO,EAAkG,OAAO,EAAE,MAAM,aAAa,CAAC;AACtI,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,0BAA0B,EAAE,MAAM,qBAAqB,CAAC;AACpG,OAAO,OAAO,MAAM,oBAAoB,CAAC;AAEzC,SAAS,iCAAiC,CAAC,IAA2B;IACpE,MAAM,UAAU,GAAgB;QAC9B,KAAK,EAAE,IAAI,CAAC,QAAQ;QACpB,KAAK,EAAE,IAAI,CAAC,EAAE;QACd,KAAK,EAAE,IAAI,CAAC,MAAM;KACnB,CAAC;IACF,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,6BAA6B,CAAC,IAAuB;IAC5D,MAAM,UAAU,mCACX,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,IAAI,EAChB,KAAK,EAAE,IAAI,CAAC,EAAE,EACd,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,EAC/B,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,EAC7B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,IAAI,IAAI,GAC1D,CAAC;IACF,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,yBAAyB,CAAC,KAA0B;IAC3D,MAAM,WAAW,GAAkB,EAAE,CAAC;IACtC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACtB,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAS,6BAA6B,CAAC,KAA8B;IACnE,MAAM,WAAW,GAAkB,EAAE,CAAC;IACtC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACtB,WAAW,CAAC,IAAI,CAAC,iCAAiC,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAS,0BAA0B,CAAC,IAAoB;IACtD,MAAM,UAAU,GAAgB;QAC9B,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,KAAK,EAAE,IAAI,CAAC,EAAE;QACd,KAAK,EAAE,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gCAAgC,IAAI,CAAC,KAAK,MAAM;QAClH,UAAU,EAAE,IAAI,CAAC,UAAU;KAC5B,CAAC;IACF,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,4BAA4B,CAAC,IAAsB;IAC1D,MAAM,WAAW,GAAkB,EAAE,CAAC;IACtC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACrB,WAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAS,wBAAwB,CAAC,KAAc,EAAE,QAAkB;IAClE,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7D,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC5B,MAAM,UAAU,GAAkB,EAAE,CAAC;IACrC,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;QACtC,IAAI,QAAQ,EAAE;YACZ,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC3B,OAAO,CAAC,KAAK,CAAC;iBACd,MAAM,EAAE,CAAC;SACb;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;aAC1B,OAAO,CAAC,KAAK,CAAC;aACd,MAAM,EAAE,CAAC;IACd,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QAChC,UAAU,CAAC,IAAI,CAAC;YACd,YAAY,EAAE,GAAG;YACjB,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC/G,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,gBAAgB,CAAC,IAAsB;IAC9C,MAAM,UAAU,GAAqB;QACnC,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,KAAK,EAAE,IAAI,CAAC,EAAE;QACd,KAAK,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,0BAA0B,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,MAAM,CAC/H,IAAI,CAAC,OAAO,CACb,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE;QAC/C,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,aAAa,EAAE,IAAI,CAAC,aAAa;QACjC,KAAK,EAAE,IAAI,CAAC,KAAK;KAClB,CAAC;IACF,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAyB;IACrD,MAAM,WAAW,GAAuB,EAAE,CAAC;IAC3C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACtB,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,OAAO,EACL,6BAA6B,EAC7B,yBAAyB,EACzB,6BAA6B,EAC7B,4BAA4B,EAC5B,wBAAwB,EACxB,gBAAgB,EAChB,oBAAoB,EACrB,CAAC","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nimport { ISelectItem } from '../layout';\nimport { ISelectItemServer, ISelectUserItemServer, IJobsiteServer, ITask, ITasksGroup, ISelectInterview, JobSite } from '../business';\nimport { DAY_MONTH_LOCALE, APP_TIME_FORMAT, APP_YEAR_MONTH_DATE_FORMAT } from 'app/shared/constant';\nimport i18next from 'app/shared/locales';\n\nfunction mappingSelectUserItemServerToView(item: ISelectUserItemServer) {\n  const selectItem: ISelectItem = {\n    label: item.fullName,\n    value: item.id,\n    image: item.avatar\n  };\n  return selectItem;\n}\n\nfunction mappingSelectItemServerToView(item: ISelectItemServer) {\n  const selectItem: ISelectItem = {\n    ...item,\n    label: item.name,\n    value: item.id,\n    image: item.image,\n    priority: item.priority || null,\n    isEntry: item.isEntry || null,\n    availableCurrentSteps: item.availableCurrentSteps || null\n  };\n  return selectItem;\n}\n\nfunction mappingSelectItemsToViews(items: ISelectItemServer[]) {\n  const selectItems: ISelectItem[] = [];\n  items.forEach(element => {\n    selectItems.push(mappingSelectItemServerToView(element));\n  });\n  return selectItems;\n}\n\nfunction mappingSelectUserItemsToViews(items: ISelectUserItemServer[]) {\n  const selectItems: ISelectItem[] = [];\n  items.forEach(element => {\n    selectItems.push(mappingSelectUserItemServerToView(element));\n  });\n  return selectItems;\n}\n\nfunction mappingJobsiteServerToView(item: IJobsiteServer) {\n  const selectItem: ISelectItem = {\n    label: item.title,\n    value: item.id,\n    image: item.title === JobSite.another || item.isInternal ? null : `content/images/logos/jobsite/${item.title}.png`,\n    isInternal: item.isInternal\n  };\n  return selectItem;\n}\n\nfunction mappingJobsitesServerToViews(item: IJobsiteServer[]) {\n  const selectItems: ISelectItem[] = [];\n  item.forEach(element => {\n    selectItems.push(mappingJobsiteServerToView(element));\n  });\n  return selectItems;\n}\n\nfunction mappingTasksToTaskGroups(items: ITask[], isSnooze?: boolean) {\n  const momentLocale = i18next.language === 'ja' ? 'ja' : 'en';\n  moment.locale(momentLocale);\n  const taskGroups: ITasksGroup[] = [];\n  const grouped = _.groupBy(items, item => {\n    if (isSnooze) {\n      return moment(item.snoozeTime)\n        .startOf('day')\n        .format();\n    }\n    return moment(item.updatedAt)\n      .startOf('day')\n      .format();\n  });\n  _.forEach(grouped, (value, key) => {\n    taskGroups.push({\n      fullDateTime: key,\n      time: moment(key).isSame(moment(), 'day') ? i18next.t('taskInbox.today') : moment(key).format(DAY_MONTH_LOCALE),\n      tasks: value\n    });\n  });\n  return taskGroups;\n}\n\nfunction mappingInterview(item: ISelectInterview) {\n  const selectItem: ISelectInterview = {\n    id: item.id,\n    value: item.id,\n    label: `${moment(item.startDate).format(APP_YEAR_MONTH_DATE_FORMAT)} ${moment(item.startDate).format(APP_TIME_FORMAT)} ~ ${moment(\n      item.endDate\n    ).format(APP_TIME_FORMAT)} ${item.title || ''}`,\n    startDate: item.startDate,\n    endDate: item.endDate,\n    place: item.place,\n    selectionStep: item.selectionStep,\n    title: item.title\n  };\n  return selectItem;\n}\n\nfunction mappingInterviewList(items: ISelectInterview[]) {\n  const selectItems: ISelectInterview[] = [];\n  items.forEach(element => {\n    selectItems.push(mappingInterview(element));\n  });\n  return selectItems;\n}\n\nexport {\n  mappingSelectItemServerToView,\n  mappingSelectItemsToViews,\n  mappingSelectUserItemsToViews,\n  mappingJobsitesServerToViews,\n  mappingTasksToTaskGroups,\n  mappingInterview,\n  mappingInterviewList\n};\n"]}]}